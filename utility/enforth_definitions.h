/* ACCEPT */
0x80|'T', 'P', 'E', 'C', 'C', 'A',
#define ROMDEF_ACCEPT 0xC006
6, 0x00,0x00, DOCOLONROM,
OVER, PLUS, OVER, KEY, DUP, ICHARLIT, 10, NOTEQUALS, IZBRANCH, 44, DUP, ICHARLIT, 8, EQUALS, OVER, ICHARLIT, 127, EQUALS, OR, IZBRANCH, 19, TWOOVER, DROP, NIP, OVER, NOTEQUALS, IZBRANCH, 10, ONEMINUS, ICHARLIT, 8, EMIT, 0xC9,0x8A, ICHARLIT, 8, EMIT, IBRANCH, 13, DUP, TWOOVER, NOTEQUALS, IZBRANCH, 7, EMIT, OVER, CSTORE, ONEPLUS, IBRANCH, 2, TWODROP, IBRANCH, -49, DROP, NIP, SWAP, MINUS, EXIT,

/* AGAIN */
0x80|'N', 'I', 'A', 'G', 'A',
#define ROMDEF_AGAIN 0xC049
0x80|5, 0xC0,0x06, DOCOLONROM,
ICHARLIT, BRANCH, 0xC1,0x7B, 0xC5,0x9C, MINUS, 0xC0,0xCD, EXIT,

/* ALIGN */
0x80|'N', 'G', 'I', 'L', 'A',
#define ROMDEF_ALIGN 0xC05C
5, 0xC0,0x49, DOCOLONROM,
EXIT,

/* ALIGNED */
0x80|'D', 'E', 'N', 'G', 'I', 'L', 'A',
#define ROMDEF_ALIGNED 0xC068
7, 0xC0,0x5C, DOCOLONROM,
EXIT,

/* ALLOT */
0x80|'T', 'O', 'L', 'L', 'A',
#define ROMDEF_ALLOT 0xC072
5, 0xC0,0x68, DOCOLONROM,
0xC2,0x9B, PLUSSTORE, EXIT,

/* BACKSLASH */
0x80|'\\',
#define ROMDEF_BACKSLASH 0xC07B
0x80|1, 0xC0,0x72, DOCOLONROM,
0xC9,0x7B, NIP, 0xCA,0x6B, STORE, EXIT,

/* BASE */
0x80|'E', 'S', 'A', 'B',
#define ROMDEF_BASE 0xC08A
4, 0xC0,0x7B, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, base), PLUS, EXIT,

/* BEGIN */
0x80|'N', 'I', 'G', 'E', 'B',
#define ROMDEF_BEGIN 0xC098
0x80|5, 0xC0,0x8A, DOCOLONROM,
0xC5,0x9C, EXIT,

/* BL */
0x80|'L', 'B',
#define ROMDEF_BL 0xC0A1
2, 0xC0,0x98, DOCOLONROM,
ICHARLIT, ' ', EXIT,

/* BRACKETCHAR */
0x80|']', 'R', 'A', 'H', 'C', '[',
#define ROMDEF_BRACKETCHAR 0xC0AE
0x80|6, 0xC0,0xA1, DOCOLONROM,
0xC0,0xFA, ICHARLIT, CHARLIT, 0xC1,0x7B, 0xC0,0xCD, EXIT,

/* BRACKETTICK */
0x80|']', '\'', '[',
#define ROMDEF_BRACKETTICK 0xC0BE
0x80|3, 0xC0,0xAE, DOCOLONROM,
0xCA,0x18, ICHARLIT, LIT, 0xC1,0x7B, 0xC1,0x65, EXIT,

/* CCOMMA */
0x80|',', 'C',
#define ROMDEF_CCOMMA 0xC0CD
2, 0xC0,0xBE, DOCOLONROM,
0xC5,0x9C, CSTORE, ICHARLIT, 1, 0xC1,0x15, 0xC0,0x72, EXIT,

/* CELLPLUS */
0x80|'+', 'L', 'L', 'E', 'C',
#define ROMDEF_CELLPLUS 0xC0E0
5, 0xC0,0xCD, DOCOLONROM,
ICHARLIT, kEnforthCellSize, PLUS, EXIT,

/* CELLS */
0x80|'S', 'L', 'L', 'E', 'C',
#define ROMDEF_CELLS 0xC0ED
5, 0xC0,0xE0, DOCOLONROM,
ICHARLIT, kEnforthCellSize, 0xC9,0xBF, EXIT,

/* CHAR */
0x80|'R', 'A', 'H', 'C',
#define ROMDEF_CHAR 0xC0FA
4, 0xC0,0xED, DOCOLONROM,
0xC0,0xA1, 0xC7,0xCF, DROP, CFETCH, EXIT,

/* CHARPLUS */
0x80|'+', 'R', 'A', 'H', 'C',
#define ROMDEF_CHARPLUS 0xC10A
5, 0xC0,0xFA, DOCOLONROM,
ONEPLUS, EXIT,

/* CHARS */
0x80|'S', 'R', 'A', 'H', 'C',
#define ROMDEF_CHARS 0xC115
5, 0xC1,0x0A, DOCOLONROM,
EXIT,

/* CNOTSIMILAR */
0x80|'}', '{', 'C',
#define ROMDEF_CNOTSIMILAR 0xC11D
3, 0xC1,0x15, DOCOLONROM,
0xC1,0xFF, INVERT, EXIT,

/* COLD */
#define ROMDEF_COLD 0xC125
0, 0xC1,0x1D, DOCOLONROM,
PISQUOTE, 31, 'E', 'n', 'f', 'o', 'r', 't', 'h', ' ', '(', 'C', ')', ' ', 'M', 'i', 'c', 'h', 'a', 'e', 'l', ' ', 'A', 'l', 'y', 'n', ' ', 'M', 'i', 'l', 'l', 'e', 'r', 0xC6,0x6E, 0xC1,0xB5, ABORT, EXIT,

/* COLON */
0x80|':',
#define ROMDEF_COLON 0xC151
1, 0xC1,0x25, DOCOLONROM,
0xC1,0xC3, 0xC5,0xCD, ZERO, ONEMINUS, 0xC0,0x72, ICHARLIT, DOCOLON, 0xC0,0xCD, 0xC9,0x06, EXIT,

/* COMMA */
0x80|',',
#define ROMDEF_COMMA 0xC165
1, 0xC1,0x51, DOCOLONROM,
0xC5,0x9C, STORE, ICHARLIT, 1, 0xC0,0xED, 0xC0,0x72, EXIT,

/* COMPILECOMMA */
0x80|',', 'E', 'L', 'I', 'P', 'M', 'O', 'C',
#define ROMDEF_COMPILECOMMA 0xC17B
8, 0xC1,0x65, DOCOLONROM,
DUP, 0xCA,0x74, IZBRANCH, 5, 0xC0,0xCD, IBRANCH, 3, 0xCC,0x2C, EXIT,

/* CONSTANT */
0x80|'T', 'N', 'A', 'T', 'S', 'N', 'O', 'C',
#define ROMDEF_CONSTANT 0xC193
8, 0xC1,0x7B, DOCOLONROM,
0xC1,0xC3, ZERO, ONEMINUS, 0xC0,0x72, ICHARLIT, DOCONSTANT, 0xC0,0xCD, 0xC1,0x65, EXIT,

/* COUNT */
0x80|'T', 'N', 'U', 'O', 'C',
#define ROMDEF_COUNT 0xC1A9
5, 0xC1,0x93, DOCOLONROM,
DUP, CFETCH, SWAP, ONEPLUS, SWAP, EXIT,

/* CR */
0x80|'R', 'C',
#define ROMDEF_CR 0xC1B5
2, 0xC1,0xA9, DOCOLONROM,
ICHARLIT, 10, EMIT, EXIT,

/* CREATE */
0x80|'E', 'T', 'A', 'E', 'R', 'C',
#define ROMDEF_CREATE 0xC1C3
6, 0xC1,0xB5, DOCOLONROM,
0xC0,0xA1, 0xC7,0xCF, DUP, ZEROEQUALS, IZBRANCH, 2, ABORT, TUCK, OVER, PLUS, ONEMINUS, DUP, CFETCH, ICHARLIT, 128, OR, 0xC0,0xCD, TWODUP, NOTEQUALS, IZBRANCH, 8, ONEMINUS, DUP, CFETCH, 0xC0,0xCD, IBRANCH, -10, TWODROP, 0xC5,0x9C, 0xCA,0xF3, SWAP, 0xC0,0xCD, 0xC6,0x95, FETCH, 0xCC,0x2C, 0xC6,0x95, STORE, ICHARLIT, DOCREATE, 0xC0,0xCD, 0xC0,0x5C, EXIT,

/* CSIMILAR */
0x80|'~', 'C',
#define ROMDEF_CSIMILAR 0xC1FF
2, 0xC1,0xC3, DOCOLONROM,
0xCA,0xDE, SWAP, 0xCA,0xDE, EQUALS, EXIT,

/* DABS */
0x80|'S', 'B', 'A', 'D',
#define ROMDEF_DABS 0xC20E
4, 0xC1,0xFF, DOCOLONROM,
DUP, 0xC8,0x60, EXIT,

/* DECIMAL */
0x80|'L', 'A', 'M', 'I', 'C', 'E', 'D',
#define ROMDEF_DECIMAL 0xC21D
7, 0xC2,0x0E, DOCOLONROM,
ICHARLIT, 10, 0xC0,0x8A, STORE, EXIT,

/* DIGITQ */
#define ROMDEF_DIGITQ 0xC227
0, 0xC2,0x1D, DOCOLONROM,
0xCA,0xDE, ICHARLIT, '0', MINUS, DUP, ZEROLESS, IZBRANCH, 4, DROP, ZERO, EXIT, DUP, ICHARLIT, 9, GREATERTHAN, IZBRANCH, 13, DUP, ICHARLIT, 17, LESSTHAN, IZBRANCH, 4, DROP, FALSE, EXIT, ICHARLIT, 7, MINUS, DUP, ONEPLUS, 0xC0,0x8A, FETCH, UGREATERTHAN, IZBRANCH, 4, DROP, FALSE, EXIT, TRUE, EXIT,

/* DNEGATE */
0x80|'E', 'T', 'A', 'G', 'E', 'N', 'D',
#define ROMDEF_DNEGATE 0xC25D
7, 0xC2,0x27, DOCOLONROM,
INVERT, SWAP, INVERT, SWAP, ICHARLIT, 1, MPLUS, EXIT,

/* DO */
0x80|'O', 'D',
#define ROMDEF_DO 0xC26B
0x80|2, 0xC2,0x5D, DOCOLONROM,
ZERO, 0xCA,0x30, STORE, ICHARLIT, PDO, 0xC1,0x7B, 0xC5,0x9C, EXIT,

/* DOT */
0x80|'.',
#define ROMDEF_DOT 0xC27B
1, 0xC2,0x6B, DOCOLONROM,
0xC0,0x8A, FETCH, ICHARLIT, 10, NOTEQUALS, IZBRANCH, 4, 0xCB,0x2C, EXIT, DUP, ABS, ZERO, 0xC6,0xC3, 0xC7,0xAD, ROT, 0xC9,0x21, 0xC7,0x9A, 0xCB,0x05, 0xC9,0x8A, EXIT,

/* DP */
#define ROMDEF_DP 0xC29B
0, 0xC2,0x7B, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, dp), PLUS, EXIT,

/* DUMP */
0x80|'P', 'M', 'U', 'D',
#define ROMDEF_DUMP 0xC2A8
4, 0xC2,0x9B, DOCOLONROM,
0xC0,0x8A, FETCH, TOR, 0xC5,0xC3, DUP, ZERO, PIQDO, 102, 0xC1,0xB5, OVER, I, PLUS, OVER, I, MINUS, ICHARLIT, 16, MIN, OVER, ZERO, 0xC6,0xC3, 0xC7,0x80, 0xC7,0x80, 0xC7,0x80, 0xC7,0x80, 0xC7,0x80, 0xC7,0x80, 0xC7,0x80, 0xC7,0x80, 0xC7,0x9A, 0xCB,0x05, ICHARLIT, 2, 0xC9,0x98, DUP, ZERO, PDO, OVER, I, PLUS, CFETCH, ZERO, 0xC6,0xC3, 0xC7,0x80, 0xC7,0x80, 0xC7,0x9A, 0xCB,0x05, 0xC9,0x8A, PILOOP, -18, ICHARLIT, 16, OVER, MINUS, ICHARLIT, 3, 0xC9,0xBF, 0xC9,0x98, 0xC9,0x8A, ZERO, PDO, DUP, I, PLUS, CFETCH, DUP, ICHARLIT, 32, LESSTHAN, OVER, ICHARLIT, 127, GREATERTHAN, OR, IZBRANCH, 4, DROP, ICHARLIT, '.', EMIT, PILOOP, -20, DROP, ICHARLIT, 16, PIPLUSLOOP, -100, TWODROP, RFROM, 0xC0,0x8A, STORE, EXIT,

/* ELSE */
0x80|'E', 'S', 'L', 'E',
#define ROMDEF_ELSE 0xC325
0x80|4, 0xC2,0xA8, DOCOLONROM,
ICHARLIT, BRANCH, 0xC1,0x7B, 0xC5,0x9C, ZERO, 0xC0,0xCD, SWAP, 0xC9,0xFC, EXIT,

/* ENDLOOP */
#define ROMDEF_ENDLOOP 0xC336
0, 0xC3,0x25, DOCOLONROM,
0xC1,0x7B, 0xC5,0x9C, MINUS, 0xC0,0xCD, 0xCA,0x30, FETCH, 0xC5,0xA4, EXIT,

/* EVALUATE */
#define ROMDEF_EVALUATE 0xC347
0, 0xC3,0x36, DOCOLONROM,
0xC6,0x2A, EXIT,

/* EXECUTE */
0x80|'E', 'T', 'U', 'C', 'E', 'X', 'E',
#define ROMDEF_EXECUTE 0xC355
7, 0xC3,0x47, DOCOLONROM,
DUP, 0xCA,0xC1, SWAP, 0xCA,0x3E, PEXECUTE, EXIT,

/* FFIDEFARITY */
#define ROMDEF_FFIDEFARITY 0xC361
0, 0xC3,0x55, DOCOLONROM,
ICHARLIT, offsetof(EnforthFFIDef, arity), PLUS, ICFETCH, EXIT,

/* FFIDEFNAME */
#define ROMDEF_FFIDEFNAME 0xC36A
0, 0xC3,0x61, DOCOLONROM,
ICHARLIT, offsetof(EnforthFFIDef, name), PLUS, IFETCH, EXIT,

/* FFIDEFNAMELEN */
#define ROMDEF_FFIDEFNAMELEN 0xC373
0, 0xC3,0x6A, DOCOLONROM,
0xC3,0x6A, DUP, DUP, ICFETCH, IZBRANCH, 4, ONEPLUS, IBRANCH, -6, SWAP, MINUS, EXIT,

/* FFIQ */
#define ROMDEF_FFIQ 0xC384
0, 0xC3,0x73, DOCOLONROM,
0xCA,0x85, CFETCH, ICHARLIT, 32, AND, ZERONOTEQUALS, EXIT,

/* FFIS */
0x80|'S', 'I', 'F', 'F',
#define ROMDEF_FFIS 0xC394
4, 0xC3,0x84, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, last_ffi), PLUS, FETCH, QDUP, IZBRANCH, 14, DUP, 0xC3,0x6A, OVER, 0xC3,0x73, 0xC6,0x6E, 0xC9,0x8A, IFETCH, IBRANCH, -15, EXIT,

/* FIND */
0x80|'D', 'N', 'I', 'F',
#define ROMDEF_FIND 0xC3B2
4, 0xC3,0x94, DOCOLONROM,
0xC1,0xA9, 0xC4,0x63, EXIT,

/* FINDCODEPRIM */
#define ROMDEF_FINDCODEPRIM 0xC3BB
0, 0xC3,0xB2, DOCOLONROM,
TWOTOR, ZERO, TICKNAMES, DUP, ICFETCH, ICHARLIT, 255, NOTEQUALS, IZBRANCH, 28, DUP, TWORFETCH, ROT, 0xC5,0x2D, IZBRANCH, 14, DROP, ICFETCH, ICHARLIT, 128, AND, ZERONOTEQUALS, ICHARLIT, 2, AND, ONEMINUS, TWORFROM, TWODROP, EXIT, ROT, ONEPLUS, ROT, DROP, SWAP, IBRANCH, -33, TWODROP, TWORFROM, TWODROP, FALSE, EXIT,

/* FINDDEF */
#define ROMDEF_FINDDEF 0xC3E9
0, 0xC3,0xBB, DOCOLONROM,
TWOTOR, 0xC6,0x95, FETCH, QDUP, IZBRANCH, 29, DUP, TWORFETCH, ROT, 0xC4,0xBA, IZBRANCH, 16, DUP, 0xCA,0x85, CFETCH, ICHARLIT, 128, AND, ZERONOTEQUALS, ICHARLIT, 2, AND, ONEMINUS, TWORFROM, TWODROP, EXIT, 0xCA,0x7D, 0xCC,0x39, IBRANCH, -30, TWORFROM, TWODROP, FALSE, EXIT,

/* FINDFFIDEF */
#define ROMDEF_FINDFFIDEF 0xC414
0, 0xC3,0xE9, DOCOLONROM,
TWOTOR, VM, ICHARLIT, offsetof(EnforthVM, last_ffi), PLUS, FETCH, QDUP, IZBRANCH, 22, RFETCH, OVER, 0xC3,0x73, EQUALS, IZBRANCH, 12, DUP, TWORFETCH, ROT, 0xC5,0x01, IZBRANCH, 5, TWORFROM, TWODROP, TRUE, EXIT, IFETCH, IBRANCH, -23, TWORFROM, TWODROP, FALSE, EXIT,

/* FINDROMDEF */
#define ROMDEF_FINDROMDEF 0xC43A
0, 0xC4,0x14, DOCOLONROM,
TWOTOR, LASTROMDEF, QDUP, IZBRANCH, 29, DUP, TWORFETCH, ROT, 0xC5,0x61, IZBRANCH, 16, DUP, 0xC8,0xFB, ICFETCH, ICHARLIT, 128, AND, ZERONOTEQUALS, ICHARLIT, 2, AND, ONEMINUS, TWORFROM, TWODROP, EXIT, 0xC8,0xF3, 0xC6,0x81, IBRANCH, -30, TWORFROM, TWODROP, FALSE, EXIT,

/* FINDWORD */
#define ROMDEF_FINDWORD 0xC463
0, 0xC4,0x3A, DOCOLONROM,
TWODUP, 0xC3,0xE9, QDUP, IZBRANCH, 4, TWOSWAP, TWODROP, EXIT, TWODUP, 0xC3,0xBB, QDUP, IZBRANCH, 4, TWOSWAP, TWODROP, EXIT, TWODUP, 0xC4,0x3A, DUP, IZBRANCH, 3, TWOSWAP, TWODROP, EXIT,

/* FMSLASHMOD */
0x80|'D', 'O', 'M', '/', 'M', 'F',
#define ROMDEF_FMSLASHMOD 0xC488
6, 0xC4,0x63, DOCOLONROM,
DUP, TOR, TWODUP, XOR, SWAP, ABS, DUP, TOR, SWAP, TOR, TOR, 0xC2,0x0E, RFROM, UMSLASHMOD, RFROM, ZEROLESS, IZBRANCH, 18, NEGATE, OVER, ZERONOTEQUALS, IZBRANCH, 9, ONEMINUS, SWAP, RFROM, SWAP, MINUS, SWAP, IBRANCH, 7, RFROM, DROP, IBRANCH, 3, RFROM, DROP, RFROM, ZEROLESS, IZBRANCH, 4, SWAP, NEGATE, SWAP, EXIT,

/* FOUNDDEFQ */
#define ROMDEF_FOUNDDEFQ 0xC4BA
0, 0xC4,0x88, DOCOLONROM,
DUP, 0xCA,0x85, CFETCH, ICHARLIT, 64, AND, ZERONOTEQUALS, IZBRANCH, 5, DROP, TWODROP, FALSE, EXIT, TWODUP, 0xC7,0x26, NOTEQUALS, IZBRANCH, 5, DROP, TWODROP, FALSE, EXIT, DUP, 0xC3,0x84, IZBRANCH, 4, 0xC5,0x24, EXIT, 0xCA,0x85, ONEMINUS, SWAP, QDUP, IZBRANCH, 26, ONEMINUS, TOR, OVER, CFETCH, OVER, CFETCH, ICHARLIT, 127, AND, 0xC1,0x1D, IZBRANCH, 6, TWODROP, RFROM, DROP, FALSE, EXIT, ONEMINUS, SWAP, ONEPLUS, SWAP, RFROM, IBRANCH, -27, TWODROP, TRUE, EXIT,

/* FOUNDFFIDEFQ */
#define ROMDEF_FOUNDFFIDEFQ 0xC501
0, 0xC4,0xBA, DOCOLONROM,
0xC3,0x6A, SWAP, QDUP, IZBRANCH, 23, ONEMINUS, TOR, OVER, CFETCH, OVER, ICFETCH, 0xC1,0x1D, IZBRANCH, 6, TWODROP, RFROM, DROP, FALSE, EXIT, ONEPLUS, SWAP, ONEPLUS, SWAP, RFROM, IBRANCH, -24, TWODROP, TRUE, EXIT,

/* FOUNDFFIQ */
#define ROMDEF_FOUNDFFIQ 0xC524
0, 0xC5,0x01, DOCOLONROM,
0xCA,0x60, 0xC5,0x01, EXIT,

/* FOUNDPRIMQ */
#define ROMDEF_FOUNDPRIMQ 0xC52D
0, 0xC5,0x24, DOCOLONROM,
DUP, DUP, ICFETCH, ICHARLIT, 31, AND, PLUS, ONEPLUS, TOR, DUP, ICFETCH, ICHARLIT, 31, AND, ROT, NOTEQUALS, IZBRANCH, 5, TWODROP, RFROM, FALSE, EXIT, ONEPLUS, OVER, CFETCH, OVER, ICFETCH, 0xC1,0x1D, IZBRANCH, 5, TWODROP, RFROM, FALSE, EXIT, ONEPLUS, SWAP, ONEPLUS, SWAP, DUP, RFETCH, EQUALS, IZBRANCH, -20, TWODROP, RFROM, TRUE, EXIT,

/* FOUNDROMDEFQ */
#define ROMDEF_FOUNDROMDEFQ 0xC561
0, 0xC5,0x2D, DOCOLONROM,
TWODUP, 0xC8,0xDF, NOTEQUALS, IZBRANCH, 5, DROP, TWODROP, FALSE, EXIT, 0xC8,0xFB, ONEMINUS, SWAP, QDUP, IZBRANCH, 26, ONEMINUS, TOR, OVER, CFETCH, OVER, ICFETCH, ICHARLIT, 127, AND, 0xC1,0x1D, IZBRANCH, 6, TWODROP, RFROM, DROP, FALSE, EXIT, ONEMINUS, SWAP, ONEPLUS, SWAP, RFROM, IBRANCH, -27, TWODROP, TRUE, EXIT,

/* HALT */
#define ROMDEF_HALT 0xC592
0, 0xC5,0x61, DOCOLONROM,
PHALT, EXIT,

/* HERE */
0x80|'E', 'R', 'E', 'H',
#define ROMDEF_HERE 0xC59C
4, 0xC5,0x92, DOCOLONROM,
0xC2,0x9B, FETCH, EXIT,

/* HERETOCHAIN */
#define ROMDEF_HERETOCHAIN 0xC5A4
0, 0xC5,0x9C, DOCOLONROM,
QDUP, IZBRANCH, 21, DUP, CFETCH, OVER, DUP, 0xC5,0x9C, SWAP, MINUS, SWAP, CSTORE, QDUP, IZBRANCH, 4, MINUS, IBRANCH, 3, DROP, ZERO, IBRANCH, -22, EXIT,

/* HEX */
0x80|'X', 'E', 'H',
#define ROMDEF_HEX 0xC5C3
3, 0xC5,0xA4, DOCOLONROM,
ICHARLIT, 16, 0xC0,0x8A, STORE, EXIT,

/* HIDE */
#define ROMDEF_HIDE 0xC5CD
0, 0xC5,0xC3, DOCOLONROM,
0xC6,0x95, FETCH, 0xCA,0x85, DUP, CFETCH, ICHARLIT, 64, OR, SWAP, CSTORE, EXIT,

/* HLD */
#define ROMDEF_HLD 0xC5DE
0, 0xC5,0xCD, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, hld), PLUS, EXIT,

/* HLDEND */
#define ROMDEF_HLDEND 0xC5E7
0, 0xC5,0xDE, DOCOLONROM,
ICHARLIT, kEnforthCellSize * 8 * 3, EXIT,

/* HOLD */
0x80|'D', 'L', 'O', 'H',
#define ROMDEF_HOLD 0xC5F2
4, 0xC5,0xE7, DOCOLONROM,
0xC5,0xDE, FETCH, ONEMINUS, DUP, 0xC5,0xDE, STORE, CSTORE, EXIT,

/* IF */
0x80|'F', 'I',
#define ROMDEF_IF 0xC602
0x80|2, 0xC5,0xF2, DOCOLONROM,
ICHARLIT, ZBRANCH, 0xC1,0x7B, 0xC5,0x9C, ZERO, 0xC0,0xCD, EXIT,

/* IMMEDIATE */
0x80|'E', 'T', 'A', 'I', 'D', 'E', 'M', 'M', 'I',
#define ROMDEF_IMMEDIATE 0xC619
9, 0xC6,0x02, DOCOLONROM,
0xC6,0x95, FETCH, 0xCA,0x85, DUP, CFETCH, ICHARLIT, 128, OR, SWAP, CSTORE, EXIT,

/* INTERPRET */
#define ROMDEF_INTERPRET 0xC62A
0, 0xC6,0x19, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, source_len), PLUS, TWOSTORE, ZERO, 0xCA,0x6B, STORE, 0xC0,0xA1, 0xC7,0xCF, DUP, IZBRANCH, 47, 0xC4,0x63, QDUP, IZBRANCH, 17, ONEPLUS, 0xC9,0xE5, FETCH, ZEROEQUALS, OR, IZBRANCH, 5, 0xC3,0x55, IBRANCH, 28, 0xC1,0x7B, IBRANCH, 24, 0xC7,0x41, IZBRANCH, 10, 0xC9,0xE5, FETCH, IZBRANCH, 15, 0xC6,0xD7, IBRANCH, 11, 0xCB,0x05, 0xC9,0x8A, ICHARLIT, '?', EMIT, 0xC1,0xB5, ABORT, IBRANCH, -52, TWODROP, EXIT,

/* ITYPE */
#define ROMDEF_ITYPE 0xC66E
0, 0xC6,0x2A, DOCOLONROM,
OVER, PLUS, SWAP, TWODUP, NOTEQUALS, IZBRANCH, 7, DUP, ICFETCH, EMIT, ONEPLUS, IBRANCH, -9, TWODROP, EXIT,

/* IXTFETCH */
#define ROMDEF_IXTFETCH 0xC681
0, 0xC6,0x6E, DOCOLONROM,
DUP, ICFETCH, ICHARLIT, 8, LSHIFT, SWAP, ONEPLUS, ICFETCH, OR, EXIT,

/* LATEST */
0x80|'T', 'S', 'E', 'T', 'A', 'L',
#define ROMDEF_LATEST 0xC695
6, 0xC6,0x81, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, latest), PLUS, EXIT,

/* LEAVE */
0x80|'E', 'V', 'A', 'E', 'L',
#define ROMDEF_LEAVE 0xC6A3
0x80|5, 0xC6,0x95, DOCOLONROM,
ICHARLIT, UNLOOP, 0xC1,0x7B, ICHARLIT, BRANCH, 0xC1,0x7B, 0xC5,0x9C, 0xCA,0x30, FETCH, DUP, IZBRANCH, 5, 0xC5,0x9C, SWAP, MINUS, 0xC0,0xCD, 0xCA,0x30, STORE, EXIT,

/* LESSNUMSIGN */
0x80|'#', '<',
#define ROMDEF_LESSNUMSIGN 0xC6C3
2, 0xC6,0xA3, DOCOLONROM,
0xC5,0x9C, 0xC5,0xE7, PLUS, 0xC5,0xDE, STORE, EXIT,

/* LITERAL */
0x80|'L', 'A', 'R', 'E', 'T', 'I', 'L',
#define ROMDEF_LITERAL 0xC6D7
0x80|7, 0xC6,0xC3, DOCOLONROM,
DUP, ICHARLIT, 255, INVERT, AND, ZEROEQUALS, IZBRANCH, 9, ICHARLIT, CHARLIT, 0xC0,0xCD, 0xC0,0xCD, IBRANCH, 7, ICHARLIT, LIT, 0xC0,0xCD, 0xC1,0x65, EXIT,

/* LOOP */
0x80|'P', 'O', 'O', 'L',
#define ROMDEF_LOOP 0xC6F6
0x80|4, 0xC6,0xD7, DOCOLONROM,
ICHARLIT, PLOOP, 0xC3,0x36, EXIT,

/* LTBRACKET */
0x80|'[',
#define ROMDEF_LTBRACKET 0xC700
0x80|1, 0xC6,0xF6, DOCOLONROM,
FALSE, 0xC9,0xE5, STORE, EXIT,

/* MOD */
0x80|'D', 'O', 'M',
#define ROMDEF_MOD 0xC70C
3, 0xC7,0x00, DOCOLONROM,
0xC9,0x3A, DROP, EXIT,

/* MSTAR */
0x80|'*', 'M',
#define ROMDEF_MSTAR 0xC716
2, 0xC7,0x0C, DOCOLONROM,
TWODUP, XOR, ZEROLESS, TOR, ABS, SWAP, ABS, UMSTAR, RFROM, 0xC8,0x60, EXIT,

/* NAMELENGTH */
#define ROMDEF_NAMELENGTH 0xC726
0, 0xC7,0x16, DOCOLONROM,
0xCA,0x85, CFETCH, ICHARLIT, 31, AND, EXIT,

/* NFALENGTH */
#define ROMDEF_NFALENGTH 0xC731
0, 0xC7,0x26, DOCOLONROM,
DUP, 0xC3,0x84, IZBRANCH, 5, DROP, ZERO, IBRANCH, 3, 0xC7,0x26, EXIT,

/* NUMBERQ */
#define ROMDEF_NUMBERQ 0xC741
0, 0xC7,0x31, DOCOLONROM,
OVER, CFETCH, DUP, ICHARLIT, '-', EQUALS, OVER, ICHARLIT, '+', EQUALS, OR, IZBRANCH, 18, ICHARLIT, '-', EQUALS, IZBRANCH, 4, TRUE, IBRANCH, 2, FALSE, TOR, ICHARLIT, 1, 0xC9,0x4C, RFROM, IBRANCH, 3, DROP, ZERO, TOR, TWODUP, ZERO, ZERO, TWOSWAP, 0xCA,0x9A, IZBRANCH, 8, DROP, TWODROP, RFROM, DROP, ZERO, IBRANCH, 10, DROP, TWONIP, DROP, RFROM, ZEROLESS, IZBRANCH, 2, NEGATE, TRUE, EXIT,

/* NUMSIGN */
0x80|'#',
#define ROMDEF_NUMSIGN 0xC780
1, 0xC7,0x41, DOCOLONROM,
0xC0,0x8A, FETCH, 0xCB,0x3C, ROT, DUP, ICHARLIT, 9, GREATERTHAN, ICHARLIT, 7, AND, PLUS, ICHARLIT, 48, PLUS, 0xC5,0xF2, EXIT,

/* NUMSIGNGRTR */
0x80|'>', '#',
#define ROMDEF_NUMSIGNGRTR 0xC79A
2, 0xC7,0x80, DOCOLONROM,
DROP, DROP, 0xC5,0xDE, FETCH, 0xC5,0x9C, 0xC5,0xE7, PLUS, OVER, MINUS, EXIT,

/* NUMSIGNS */
0x80|'S', '#',
#define ROMDEF_NUMSIGNS 0xC7AD
2, 0xC7,0x9A, DOCOLONROM,
0xC7,0x80, TWODUP, OR, IZBRANCH, 3, IBRANCH, -7, EXIT,

/* PAREN */
0x80|'(',
#define ROMDEF_PAREN 0xC7BB
0x80|1, 0xC7,0xAD, DOCOLONROM,
ICHARLIT, ')', 0xC7,0xCF, TWODROP, EXIT,

/* PARSEWORD */
0x80|'D', 'R', 'O', 'W', '-', 'E', 'S', 'R', 'A', 'P',
#define ROMDEF_PARSEWORD 0xC7CF
10, 0xC7,0xBB, DOCOLONROM,
TOR, 0xC9,0x7B, 0xCA,0x6B, FETCH, 0xC9,0x4C, RFETCH, TOR, OVER, CFETCH, RFETCH, EQUALS, OVER, AND, IZBRANCH, 7, ICHARLIT, 1, 0xC9,0x4C, IBRANCH, -13, RFROM, DROP, OVER, SWAP, RFROM, TOR, DUP, ZEROEQUALS, IZBRANCH, 6, RFROM, TWODROP, FALSE, IBRANCH, 18, OVER, CFETCH, RFETCH, EQUALS, IZBRANCH, 6, RFROM, TWODROP, TRUE, IBRANCH, 7, ICHARLIT, 1, 0xC9,0x4C, IBRANCH, -25, OVER, 0xC9,0x7B, DROP, MINUS, SWAP, IZBRANCH, 2, ONEPLUS, 0xCA,0x6B, STORE, OVER, MINUS, EXIT,

/* PLUSLOOP */
0x80|'P', 'O', 'O', 'L', '+',
#define ROMDEF_PLUSLOOP 0xC81F
0x80|5, 0xC7,0xCF, DOCOLONROM,
ICHARLIT, PPLUSLOOP, 0xC3,0x36, EXIT,

/* POSTPONE */
0x80|'E', 'N', 'O', 'P', 'T', 'S', 'O', 'P',
#define ROMDEF_POSTPONE 0xC830
0x80|8, 0xC8,0x1F, DOCOLONROM,
0xC0,0xA1, 0xC7,0xCF, 0xC4,0x63, QDUP, ZEROEQUALS, IZBRANCH, 11, 0xCB,0x05, 0xC9,0x8A, ICHARLIT, '?', EMIT, 0xC1,0xB5, ABORT, ZEROLESS, IZBRANCH, 19, ICHARLIT, LIT, 0xC1,0x7B, 0xC1,0x65, ICHARLIT, ((uint8_t)((ROMDEF_COMPILECOMMA >> 8) & 0xff)), ICHARLIT, 8, LSHIFT, ICHARLIT, ((uint8_t)((ROMDEF_COMPILECOMMA     ) & 0xff)), OR, 0xCC,0x2C, IBRANCH, 3, 0xC1,0x7B, EXIT,

/* QDNEGATE */
#define ROMDEF_QDNEGATE 0xC860
0, 0xC8,0x30, DOCOLONROM,
ZEROLESS, IZBRANCH, 3, 0xC2,0x5D, EXIT,

/* QDO */
0x80|'O', 'D', '?',
#define ROMDEF_QDO 0xC86D
0x80|3, 0xC8,0x60, DOCOLONROM,
ICHARLIT, PQDO, 0xC1,0x7B, 0xC5,0x9C, 0xCA,0x30, STORE, ZERO, 0xC0,0xCD, 0xC5,0x9C, EXIT,

/* QNEGATE */
#define ROMDEF_QNEGATE 0xC880
0, 0xC8,0x6D, DOCOLONROM,
ZEROLESS, IZBRANCH, 2, NEGATE, EXIT,

/* QUIT */
0x80|'T', 'I', 'U', 'Q',
#define ROMDEF_QUIT 0xC88D
4, 0xC8,0x80, DOCOLONROM,
INITRP, ZERO, 0xC9,0xE5, STORE, 0xCA,0x07, DUP, 0xCA,0x10, 0xC0,0x06, 0xC9,0x8A, 0xC6,0x2A, 0xC1,0xB5, 0xC9,0xE5, FETCH, ZEROEQUALS, IZBRANCH, 8, PISQUOTE, 3, 'o', 'k', ' ', 0xC6,0x6E, IBRANCH, -27,

/* REPEAT */
0x80|'T', 'A', 'E', 'P', 'E', 'R',
#define ROMDEF_REPEAT 0xC8B8
0x80|6, 0xC8,0x8D, DOCOLONROM,
0xC0,0x49, 0xC9,0xFC, EXIT,

/* REVEAL */
#define ROMDEF_REVEAL 0xC8C1
0, 0xC8,0xB8, DOCOLONROM,
0xC6,0x95, FETCH, 0xCA,0x85, DUP, CFETCH, ICHARLIT, 191, AND, SWAP, CSTORE, EXIT,

/* ROMDEFQ */
#define ROMDEF_ROMDEFQ 0xC8D2
0, 0xC8,0xC1, DOCOLONROM,
ICHARLIT, 8, RSHIFT, ICHARLIT, 192, TUCK, AND, EQUALS, EXIT,

/* ROMNAMELENGTH */
#define ROMDEF_ROMNAMELENGTH 0xC8DF
0, 0xC8,0xD2, DOCOLONROM,
0xC8,0xFB, ICFETCH, ICHARLIT, 31, AND, EXIT,

/* ROMXTTOCFA */
#define ROMDEF_ROMXTTOCFA 0xC8EA
0, 0xC8,0xDF, DOCOLONROM,
0xC8,0xF3, ONEPLUS, ONEPLUS, EXIT,

/* ROMXTTOLFA */
#define ROMDEF_ROMXTTOLFA 0xC8F3
0, 0xC8,0xEA, DOCOLONROM,
0xC8,0xFB, ONEPLUS, EXIT,

/* ROMXTTONFA */
#define ROMDEF_ROMXTTONFA 0xC8FB
0, 0xC8,0xF3, DOCOLONROM,
0xCC,0x51, AND, TICKROMDEF, PLUS, EXIT,

/* RTBRACKET */
0x80|']',
#define ROMDEF_RTBRACKET 0xC906
1, 0xC8,0xFB, DOCOLONROM,
TRUE, 0xC9,0xE5, STORE, EXIT,

/* SEMICOLON */
0x80|';',
#define ROMDEF_SEMICOLON 0xC910
0x80|1, 0xC9,0x06, DOCOLONROM,
ICHARLIT, EXIT, 0xC1,0x7B, 0xC8,0xC1, 0xC7,0x00, EXIT,

/* SIGN */
0x80|'N', 'G', 'I', 'S',
#define ROMDEF_SIGN 0xC921
4, 0xC9,0x10, DOCOLONROM,
ZEROLESS, IZBRANCH, 5, ICHARLIT, '-', 0xC5,0xF2, EXIT,

/* SLASH */
0x80|'/',
#define ROMDEF_SLASH 0xC92E
1, 0xC9,0x21, DOCOLONROM,
0xC9,0x3A, NIP, EXIT,

/* SLASHMOD */
0x80|'D', 'O', 'M', '/',
#define ROMDEF_SLASHMOD 0xC93A
4, 0xC9,0x2E, DOCOLONROM,
TOR, 0xC9,0xF1, RFROM, 0xC9,0x5D, EXIT,

/* SLASHSTRING */
0x80|'G', 'N', 'I', 'R', 'T', 'S', '/',
#define ROMDEF_SLASHSTRING 0xC94C
7, 0xC9,0x3A, DOCOLONROM,
ROT, OVER, PLUS, ROT, ROT, MINUS, EXIT,

/* SMSLASHREM */
0x80|'M', 'E', 'R', '/', 'M', 'S',
#define ROMDEF_SMSLASHREM 0xC95D
6, 0xC9,0x4C, DOCOLONROM,
OVER, TOR, TWODUP, XOR, TOR, ABS, TOR, 0xC2,0x0E, RFROM, UMSLASHMOD, RFROM, 0xC8,0x80, SWAP, RFROM, 0xC8,0x80, SWAP, EXIT,

/* SOURCE */
0x80|'E', 'C', 'R', 'U', 'O', 'S',
#define ROMDEF_SOURCE 0xC97B
6, 0xC9,0x5D, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, source_len), PLUS, TWOFETCH, EXIT,

/* SPACE */
0x80|'E', 'C', 'A', 'P', 'S',
#define ROMDEF_SPACE 0xC98A
5, 0xC9,0x7B, DOCOLONROM,
0xC0,0xA1, EMIT, EXIT,

/* SPACES */
0x80|'S', 'E', 'C', 'A', 'P', 'S',
#define ROMDEF_SPACES 0xC998
6, 0xC9,0x8A, DOCOLONROM,
QDUP, IZBRANCH, 6, 0xC9,0x8A, ONEMINUS, IBRANCH, -7, EXIT,

/* SQUOTE */
0x80|'"', 'S',
#define ROMDEF_SQUOTE 0xC9A7
0x80|2, 0xC9,0x98, DOCOLONROM,
ICHARLIT, '"', 0xC7,0xCF, ICHARLIT, PSQUOTE, 0xC1,0x7B, DUP, 0xC0,0xCD, 0xC5,0x9C, OVER, 0xC0,0x72, SWAP, MOVE, EXIT,

/* STAR */
0x80|'*',
#define ROMDEF_STAR 0xC9BF
1, 0xC9,0xA7, DOCOLONROM,
UMSTAR, DROP, EXIT,

/* STARSLASH */
0x80|'/', '*',
#define ROMDEF_STARSLASH 0xC9C8
2, 0xC9,0xBF, DOCOLONROM,
0xC9,0xD5, NIP, EXIT,

/* STARSLASHMOD */
0x80|'D', 'O', 'M', '/', '*',
#define ROMDEF_STARSLASHMOD 0xC9D5
5, 0xC9,0xC8, DOCOLONROM,
TOR, 0xC7,0x16, RFROM, 0xC9,0x5D, EXIT,

/* STATE */
0x80|'E', 'T', 'A', 'T', 'S',
#define ROMDEF_STATE 0xC9E5
5, 0xC9,0xD5, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, state), PLUS, EXIT,

/* STOD */
0x80|'D', '>', 'S',
#define ROMDEF_STOD 0xC9F1
3, 0xC9,0xE5, DOCOLONROM,
DUP, ZEROLESS, EXIT,

/* THEN */
0x80|'N', 'E', 'H', 'T',
#define ROMDEF_THEN 0xC9FC
0x80|4, 0xC9,0xF1, DOCOLONROM,
0xC5,0x9C, OVER, MINUS, SWAP, CSTORE, EXIT,

/* TIB */
#define ROMDEF_TIB 0xCA07
0, 0xC9,0xFC, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, tib), PLUS, EXIT,

/* TIBSIZE */
#define ROMDEF_TIBSIZE 0xCA10
0, 0xCA,0x07, DOCOLONROM,
ICHARLIT, 80, EXIT,

/* TICK */
0x80|'\'',
#define ROMDEF_TICK 0xCA18
1, 0xCA,0x10, DOCOLONROM,
0xC0,0xA1, 0xC7,0xCF, 0xC4,0x63, ZEROEQUALS, IZBRANCH, 11, 0xCB,0x05, 0xC9,0x8A, ICHARLIT, '?', EMIT, 0xC1,0xB5, ABORT, EXIT,

/* TICKPREVLEAVE */
#define ROMDEF_TICKPREVLEAVE 0xCA30
0, 0xCA,0x18, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, prev_leave), PLUS, EXIT,

/* TOBODY */
0x80|'Y', 'D', 'O', 'B', '>',
#define ROMDEF_TOBODY 0xCA3E
5, 0xCA,0x30, DOCOLONROM,
DUP, 0xCA,0x74, IZBRANCH, 4, DROP, ZERO, EXIT, DUP, 0xC8,0xD2, IZBRANCH, 5, 0xC8,0xEA, ONEPLUS, EXIT, 0xCA,0x57, ONEPLUS, EXIT,

/* TOCFA */
#define ROMDEF_TOCFA 0xCA57
0, 0xCA,0x3E, DOCOLONROM,
0xCA,0x7D, ONEPLUS, ONEPLUS, EXIT,

/* TOFFIDEF */
#define ROMDEF_TOFFIDEF 0xCA60
0, 0xCA,0x57, DOCOLONROM,
0xCA,0x3E, FETCH, EXIT,

/* TOIN */
0x80|'N', 'I', '>',
#define ROMDEF_TOIN 0xCA6B
3, 0xCA,0x60, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, to_in), PLUS, EXIT,

/* TOKENQ */
#define ROMDEF_TOKENQ 0xCA74
0, 0xCA,0x6B, DOCOLONROM,
0xCC,0x47, AND, ZEROEQUALS, EXIT,

/* TOLFA */
#define ROMDEF_TOLFA 0xCA7D
0, 0xCA,0x74, DOCOLONROM,
0xCA,0x85, ONEPLUS, EXIT,

/* TONFA */
#define ROMDEF_TONFA 0xCA85
0, 0xCA,0x7D, DOCOLONROM,
0xCC,0x51, AND, VM, ICHARLIT, offsetof(EnforthVM, dictionary), PLUS, FETCH, PLUS, EXIT,

/* TONUMBER */
0x80|'R', 'E', 'B', 'M', 'U', 'N', '>',
#define ROMDEF_TONUMBER 0xCA9A
7, 0xCA,0x85, DOCOLONROM,
DUP, IZBRANCH, 32, OVER, CFETCH, 0xC2,0x27, ZEROEQUALS, IZBRANCH, 2, EXIT, TOR, TWOSWAP, 0xC0,0x8A, FETCH, DUP, TOR, UMSTAR, DROP, SWAP, RFROM, UMSTAR, ROT, PLUS, RFROM, MPLUS, TWOSWAP, ICHARLIT, 1, 0xC9,0x4C, IBRANCH, -33, EXIT,

/* TOTOKEN */
#define ROMDEF_TOTOKEN 0xCAC1
0, 0xCA,0x9A, DOCOLONROM,
DUP, 0xCA,0x74, IZBRANCH, 2, EXIT, DUP, 0xC8,0xD2, IZBRANCH, 5, 0xC8,0xEA, ICFETCH, EXIT, 0xCA,0x57, CFETCH, EXIT,

/* TOUPPER */
0x80|'R', 'E', 'P', 'P', 'U', '>',
#define ROMDEF_TOUPPER 0xCADE
6, 0xCA,0xC1, DOCOLONROM,
DUP, ICHARLIT, 'a', ONEMINUS, GREATERTHAN, OVER, ICHARLIT, 'z', ONEPLUS, LESSTHAN, AND, IZBRANCH, 4, ICHARLIT, 32, MINUS, EXIT,

/* TOXT */
#define ROMDEF_TOXT 0xCAF3
0, 0xCA,0xDE, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, dictionary), PLUS, FETCH, MINUS, 0xCC,0x47, OR, EXIT,

/* TYPE */
0x80|'E', 'P', 'Y', 'T',
#define ROMDEF_TYPE 0xCB05
4, 0xCA,0xF3, DOCOLONROM,
OVER, PLUS, SWAP, TWODUP, NOTEQUALS, IZBRANCH, 7, DUP, CFETCH, EMIT, ONEPLUS, IBRANCH, -9, TWODROP, EXIT,

/* UDDOT */
0x80|'.', 'D', 'U',
#define ROMDEF_UDDOT 0xCB1B
3, 0xCB,0x05, DOCOLONROM,
0xC6,0xC3, 0xC7,0xAD, 0xC7,0x9A, 0xCB,0x05, 0xC9,0x8A, EXIT,

/* UDOT */
0x80|'.', 'U',
#define ROMDEF_UDOT 0xCB2C
2, 0xCB,0x1B, DOCOLONROM,
ZERO, 0xC6,0xC3, 0xC7,0xAD, 0xC7,0x9A, 0xCB,0x05, 0xC9,0x8A, EXIT,

/* UDSLASHMOD */
#define ROMDEF_UDSLASHMOD 0xCB3C
0, 0xCB,0x2C, DOCOLONROM,
TOR, ZERO, RFETCH, UMSLASHMOD, RFROM, SWAP, TOR, UMSLASHMOD, RFROM, EXIT,

/* UNUSED */
0x80|'D', 'E', 'S', 'U', 'N', 'U',
#define ROMDEF_UNUSED 0xCB50
6, 0xCB,0x3C, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, dictionary), PLUS, FETCH, VM, ICHARLIT, offsetof(EnforthVM, dictionary_size), PLUS, FETCH, PLUS, 0xC5,0x9C, MINUS, EXIT,

/* USE */
0x80|':', 'E', 'S', 'U',
#define ROMDEF_USE 0xCB67
4, 0xCB,0x50, DOCOLONROM,
0xC0,0xA1, 0xC7,0xCF, DUP, ZEROEQUALS, IZBRANCH, 2, ABORT, TWODUP, 0xC4,0x14, ZEROEQUALS, IZBRANCH, 11, 0xCB,0x05, 0xC9,0x8A, ICHARLIT, '?', EMIT, 0xC1,0xB5, ABORT, 0xC5,0x9C, 0xCA,0xF3, ROT, ICHARLIT, 32, OR, 0xC0,0xCD, 0xC6,0x95, FETCH, 0xCC,0x2C, 0xC6,0x95, STORE, ICHARLIT, DOFFI0, OVER, 0xC3,0x61, PLUS, 0xC0,0xCD, 0xC0,0x5C, 0xC1,0x65, DROP, EXIT,

/* VARIABLE */
0x80|'E', 'L', 'B', 'A', 'I', 'R', 'A', 'V',
#define ROMDEF_VARIABLE 0xCBAC
8, 0xCB,0x67, DOCOLONROM,
0xC1,0xC3, ZERO, ONEMINUS, 0xC0,0x72, ICHARLIT, DOVARIABLE, 0xC0,0xCD, ZERO, 0xC1,0x65, EXIT,

/* WHILE */
0x80|'E', 'L', 'I', 'H', 'W',
#define ROMDEF_WHILE 0xCBC3
0x80|5, 0xCB,0xAC, DOCOLONROM,
0xC6,0x02, SWAP, EXIT,

/* WORDS */
0x80|'S', 'D', 'R', 'O', 'W',
#define ROMDEF_WORDS 0xCBD0
5, 0xCB,0xC3, DOCOLONROM,
0xC6,0x95, FETCH, QDUP, IZBRANCH, 49, DUP, 0xC3,0x84, IZBRANCH, 16, DUP, 0xCA,0x60, DUP, 0xC3,0x6A, SWAP, 0xC3,0x73, 0xC6,0x6E, 0xC9,0x8A, IBRANCH, 23, DUP, 0xCA,0x7D, ONEPLUS, ONEPLUS, CFETCH, ICHARLIT, 64, AND, ZEROEQUALS, IZBRANCH, 11, DUP, 0xCA,0x85, OVER, 0xC7,0x31, 0xCB,0x05, 0xC9,0x8A, 0xCA,0x7D, 0xCC,0x39, IBRANCH, -50, TICKNAMES, DUP, ICFETCH, ICHARLIT, 255, NOTEQUALS, IZBRANCH, 25, DUP, ICFETCH, ICHARLIT, 31, AND, TUCK, OVER, PLUS, ONEPLUS, SWAP, ONEPLUS, ROT, QDUP, IZBRANCH, 7, 0xC6,0x6E, 0xC9,0x8A, IBRANCH, 2, DROP, IBRANCH, -30, DROP, EXIT,

/* XTCOMMA */
#define ROMDEF_XTCOMMA 0xCC2C
0, 0xCB,0xD0, DOCOLONROM,
DUP, ICHARLIT, 8, RSHIFT, 0xC0,0xCD, 0xC0,0xCD, EXIT,

/* XTFETCH */
#define ROMDEF_XTFETCH 0xCC39
0, 0xCC,0x2C, DOCOLONROM,
DUP, CFETCH, ICHARLIT, 8, LSHIFT, SWAP, ONEPLUS, CFETCH, OR, EXIT,

/* XTFLAG */
#define ROMDEF_XTFLAG 0xCC47
0, 0xCC,0x39, DOCOLONROM,
ICHARLIT, 128, ICHARLIT, 8, LSHIFT, EXIT,

/* XTMASK */
#define ROMDEF_XTMASK 0xCC51
0, 0xCC,0x47, DOCOLONROM,
ICHARLIT, 255, ICHARLIT, 63, ICHARLIT, 8, LSHIFT, OR, EXIT,

#define ROMDEF_LAST 0xCC51
