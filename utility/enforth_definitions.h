#define ROMDEF_LAST 0x0000

/* TICKDICT */
#undef ROMDEF_LAST
#define ROMDEF_TICKDICT 0xC000
#define ROMDEF_LAST 0xC000
0, 0x00,0x00, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, dictionary), PLUS, FETCH, EXIT,

/* TICKPREVLEAVE */
#undef ROMDEF_LAST
#define ROMDEF_TICKPREVLEAVE 0xC00A
#define ROMDEF_LAST 0xC00A
0, 0xC0,0x00, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, prev_leave), PLUS, EXIT,

/* TICKROMDEF */
#undef ROMDEF_LAST
#define ROMDEF_TICKROMDEF 0xC013
#define ROMDEF_LAST 0xC013
0, 0xC0,0x0A, TICKROMDEF,

/* PPLUSLOOP */
#undef ROMDEF_LAST
#define ROMDEF_PPLUSLOOP 0xC017
#define ROMDEF_LAST 0xC017
0, 0xC0,0x13, PPLUSLOOP,

/* PQDO */
#undef ROMDEF_LAST
#define ROMDEF_PQDO 0xC01B
#define ROMDEF_LAST 0xC01B
0, 0xC0,0x17, PQDO,

/* PDO */
#undef ROMDEF_LAST
#define ROMDEF_PDO 0xC01F
#define ROMDEF_LAST 0xC01F
0, 0xC0,0x1B, PDO,

/* PHALT */
#undef ROMDEF_LAST
#define ROMDEF_PHALT 0xC023
#define ROMDEF_LAST 0xC023
0, 0xC0,0x1F, PHALT,

/* PILOOP */
#undef ROMDEF_LAST
#define ROMDEF_PILOOP 0xC027
#define ROMDEF_LAST 0xC027
0, 0xC0,0x23, PILOOP,

/* PISQUOTE */
#undef ROMDEF_LAST
#define ROMDEF_PISQUOTE 0xC02B
#define ROMDEF_LAST 0xC02B
0, 0xC0,0x27, PISQUOTE,

/* PKEY */
#undef ROMDEF_LAST
#define ROMDEF_PKEY 0xC02F
#define ROMDEF_LAST 0xC02F
0, 0xC0,0x2B, PKEY,

/* LIT */
#undef ROMDEF_LAST
#define ROMDEF_LIT 0xC033
#define ROMDEF_LAST 0xC033
0, 0xC0,0x2F, LIT,

/* PLOOP */
#undef ROMDEF_LAST
#define ROMDEF_PLOOP 0xC037
#define ROMDEF_LAST 0xC037
0, 0xC0,0x33, PLOOP,

/* PSQUOTE */
#undef ROMDEF_LAST
#define ROMDEF_PSQUOTE 0xC03B
#define ROMDEF_LAST 0xC03B
0, 0xC0,0x37, PSQUOTE,

/* ZBRANCH */
#undef ROMDEF_LAST
#define ROMDEF_ZBRANCH 0xC03F
#define ROMDEF_LAST 0xC03F
0, 0xC0,0x3B, ZBRANCH,

/* TOFFIDEF */
#undef ROMDEF_LAST
#define ROMDEF_TOFFIDEF 0xC043
#define ROMDEF_LAST 0xC043
0, 0xC0,0x3F, DOCOLONROM,
0xC5,0x49, FETCH, EXIT,

/* TONFA */
#undef ROMDEF_LAST
#define ROMDEF_TONFA 0xC04B
#define ROMDEF_LAST 0xC04B
0, 0xC0,0x43, DOCOLONROM,
0xC3,0x79, AND, 0xC0,0x00, PLUS, EXIT,

/* TOXT */
#undef ROMDEF_LAST
#define ROMDEF_TOXT 0xC056
#define ROMDEF_LAST 0xC056
0, 0xC0,0x4B, DOCOLONROM,
0xC0,0x00, MINUS, 0xC3,0x6F, OR, EXIT,

/* QDNEGATE */
#undef ROMDEF_LAST
#define ROMDEF_QDNEGATE 0xC061
#define ROMDEF_LAST 0xC061
0, 0xC0,0x56, DOCOLONROM,
ZEROLESS, IZBRANCH, 3, 0xC7,0xBD, EXIT,

/* QNEGATE */
#undef ROMDEF_LAST
#define ROMDEF_QNEGATE 0xC06B
#define ROMDEF_LAST 0xC06B
0, 0xC0,0x61, DOCOLONROM,
ZEROLESS, IZBRANCH, 2, NEGATE, EXIT,

/* BRANCH */
#undef ROMDEF_LAST
#define ROMDEF_BRANCH 0xC074
#define ROMDEF_LAST 0xC074
0, 0xC0,0x6B, BRANCH,

/* CFETCHXT */
#undef ROMDEF_LAST
#define ROMDEF_CFETCHXT 0xC078
#define ROMDEF_LAST 0xC078
0, 0xC0,0x74, DOCOLONROM,
DUP, ICHARLIT, 14, RSHIFT, ICHARLIT, 3, EQUALS, IZBRANCH, 8, 0xC3,0x79, AND, TICKROMDEF, PLUS, ICFETCH, EXIT, 0xC0,0x4B, CFETCH, EXIT,

/* CHARLIT */
#undef ROMDEF_LAST
#define ROMDEF_CHARLIT 0xC090
#define ROMDEF_LAST 0xC090
0, 0xC0,0x78, CHARLIT,

/* COLD */
#undef ROMDEF_LAST
#define ROMDEF_COLD 0xC094
#define ROMDEF_LAST 0xC094
0, 0xC0,0x90, DOCOLONROM,
PISQUOTE, 31, 'E', 'n', 'f', 'o', 'r', 't', 'h', ' ', '(', 'C', ')', ' ', 'M', 'i', 'c', 'h', 'a', 'e', 'l', ' ', 'A', 'l', 'y', 'n', ' ', 'M', 'i', 'l', 'l', 'e', 'r', 0xC2,0x92, 0xC7,0x31, ABORT, EXIT,

/* DIGITQ */
#undef ROMDEF_LAST
#define ROMDEF_DIGITQ 0xC0BF
#define ROMDEF_LAST 0xC0BF
0, 0xC0,0x94, DOCOLONROM,
0xC5,0x9C, ICHARLIT, '0', MINUS, DUP, ZEROLESS, IZBRANCH, 4, DROP, ZERO, EXIT, DUP, ICHARLIT, 9, GREATERTHAN, IZBRANCH, 13, DUP, ICHARLIT, 17, LESSTHAN, IZBRANCH, 4, DROP, FALSE, EXIT, ICHARLIT, 7, MINUS, DUP, ONEPLUS, BASE, FETCH, UGREATERTHAN, IZBRANCH, 4, DROP, FALSE, EXIT, TRUE, EXIT,

/* DP */
#undef ROMDEF_LAST
#define ROMDEF_DP 0xC0ED
#define ROMDEF_LAST 0xC0ED
0, 0xC0,0xBF, DOCOLONROM,
0xC0,0x00, EXIT,

/* ENDLOOP */
#undef ROMDEF_LAST
#define ROMDEF_ENDLOOP 0xC0F4
#define ROMDEF_LAST 0xC0F4
0, 0xC0,0xED, DOCOLONROM,
0xC6,0xE6, 0xC8,0xFE, MINUS, 0xC6,0x8B, 0xC0,0x0A, FETCH, 0xC1,0xFE, EXIT,

/* EVALUATE */
#undef ROMDEF_LAST
#define ROMDEF_EVALUATE 0xC105
#define ROMDEF_LAST 0xC105
0, 0xC0,0xF4, DOCOLONROM,
0xC2,0x4F, EXIT,

/* FFIQ */
#undef ROMDEF_LAST
#define ROMDEF_FFIQ 0xC10C
#define ROMDEF_LAST 0xC10C
0, 0xC1,0x05, DOCOLONROM,
0xC0,0x78, ICHARLIT, 32, AND, ZERONOTEQUALS, EXIT,

/* FFIDEFARITY */
#undef ROMDEF_LAST
#define ROMDEF_FFIDEFARITY 0xC117
#define ROMDEF_LAST 0xC117
0, 0xC1,0x0C, DOCOLONROM,
ICHARLIT, offsetof(EnforthFFIDef, arity), PLUS, ICFETCH, EXIT,

/* FFIDEFNAME */
#undef ROMDEF_LAST
#define ROMDEF_FFIDEFNAME 0xC120
#define ROMDEF_LAST 0xC120
0, 0xC1,0x17, DOCOLONROM,
ICHARLIT, offsetof(EnforthFFIDef, name), PLUS, IFETCH, EXIT,

/* FFIDEFNAMELEN */
#undef ROMDEF_LAST
#define ROMDEF_FFIDEFNAMELEN 0xC129
#define ROMDEF_LAST 0xC129
0, 0xC1,0x20, DOCOLONROM,
0xC1,0x20, DUP, DUP, ICFETCH, IZBRANCH, 4, ONEPLUS, IBRANCH, -6, SWAP, MINUS, EXIT,

/* FINDFFIDEF */
#undef ROMDEF_LAST
#define ROMDEF_FINDFFIDEF 0xC13A
#define ROMDEF_LAST 0xC13A
0, 0xC1,0x29, DOCOLONROM,
TWOTOR, VM, ICHARLIT, offsetof(EnforthVM, last_ffi), PLUS, FETCH, QDUP, IZBRANCH, 22, RFETCH, OVER, 0xC1,0x29, EQUALS, IZBRANCH, 12, DUP, TWORFETCH, ROT, 0xC1,0x90, IZBRANCH, 5, TWORFROM, TWODROP, TRUE, EXIT, IFETCH, IBRANCH, -23, TWORFROM, TWODROP, FALSE, EXIT,

/* FINDWORD */
#undef ROMDEF_LAST
#define ROMDEF_FINDWORD 0xC160
#define ROMDEF_LAST 0xC160
0, 0xC1,0x3A, DOCOLONROM,
TWOTOR, 0xC2,0xB4, FETCH, QDUP, IZBRANCH, 26, DUP, TWORFETCH, ROT, 0xC1,0xB3, IZBRANCH, 15, DUP, 0xC0,0x78, ICHARLIT, 128, AND, ZERONOTEQUALS, ICHARLIT, 2, AND, ONEMINUS, TWORFROM, TWODROP, EXIT, 0xC2,0xBD, IBRANCH, -27, TWORFROM, FALSE, EXIT,

/* FOUNDFFIQ */
#undef ROMDEF_LAST
#define ROMDEF_FOUNDFFIQ 0xC187
#define ROMDEF_LAST 0xC187
0, 0xC1,0x60, DOCOLONROM,
0xC0,0x43, 0xC1,0x90, EXIT,

/* FOUNDFFIDEFQ */
#undef ROMDEF_LAST
#define ROMDEF_FOUNDFFIDEFQ 0xC190
#define ROMDEF_LAST 0xC190
0, 0xC1,0x87, DOCOLONROM,
0xC1,0x20, SWAP, QDUP, IZBRANCH, 23, ONEMINUS, TOR, OVER, CFETCH, OVER, ICFETCH, 0xC7,0x7C, IZBRANCH, 6, TWODROP, RFROM, DROP, FALSE, EXIT, ONEPLUS, SWAP, ONEPLUS, SWAP, RFROM, IBRANCH, -24, TWODROP, TRUE, EXIT,

/* FOUNDQ */
#undef ROMDEF_LAST
#define ROMDEF_FOUNDQ 0xC1B3
#define ROMDEF_LAST 0xC1B3
0, 0xC1,0x90, DOCOLONROM,
DUP, 0xC0,0x78, ICHARLIT, 64, AND, ZERONOTEQUALS, IZBRANCH, 5, DROP, TWODROP, FALSE, EXIT, TWODUP, 0xC2,0xCE, NOTEQUALS, IZBRANCH, 5, DROP, TWODROP, FALSE, EXIT, DUP, 0xC1,0x0C, IZBRANCH, 4, 0xC1,0x87, EXIT, ONEMINUS, SWAP, QDUP, IZBRANCH, 27, ONEMINUS, TOR, OVER, CFETCH, OVER, 0xC0,0x78, ICHARLIT, 127, AND, 0xC7,0x7C, IZBRANCH, 6, TWODROP, RFROM, DROP, FALSE, EXIT, ONEMINUS, SWAP, ONEPLUS, SWAP, RFROM, IBRANCH, -28, TWODROP, TRUE, EXIT,

/* HALT */
#undef ROMDEF_LAST
#define ROMDEF_HALT 0xC1F8
#define ROMDEF_LAST 0xC1F8
0, 0xC1,0xB3, DOCOLONROM,
PHALT, EXIT,

/* HERETOCHAIN */
#undef ROMDEF_LAST
#define ROMDEF_HERETOCHAIN 0xC1FE
#define ROMDEF_LAST 0xC1FE
0, 0xC1,0xF8, DOCOLONROM,
QDUP, IZBRANCH, 21, DUP, CFETCH, OVER, DUP, 0xC8,0xFE, SWAP, MINUS, SWAP, CSTORE, QDUP, IZBRANCH, 4, MINUS, IBRANCH, 3, DROP, ZERO, IBRANCH, -22, EXIT,

/* HIDE */
#undef ROMDEF_LAST
#define ROMDEF_HIDE 0xC21A
#define ROMDEF_LAST 0xC21A
0, 0xC1,0xFE, DOCOLONROM,
0xC2,0xB4, FETCH, 0xC0,0x4B, DUP, CFETCH, ICHARLIT, 64, OR, SWAP, CSTORE, EXIT,

/* HLD */
#undef ROMDEF_LAST
#define ROMDEF_HLD 0xC22B
#define ROMDEF_LAST 0xC22B
0, 0xC2,0x1A, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, hld), PLUS, EXIT,

/* HLDEND */
#undef ROMDEF_LAST
#define ROMDEF_HLDEND 0xC234
#define ROMDEF_LAST 0xC234
0, 0xC2,0x2B, DOCOLONROM,
ICHARLIT, kEnforthCellSize * 8 * 3, EXIT,

/* IFETCH */
#undef ROMDEF_LAST
#define ROMDEF_IFETCH 0xC23B
#define ROMDEF_LAST 0xC23B
0, 0xC2,0x34, IFETCH,

/* IBRANCH */
#undef ROMDEF_LAST
#define ROMDEF_IBRANCH 0xC23F
#define ROMDEF_LAST 0xC23F
0, 0xC2,0x3B, IBRANCH,

/* ICFETCH */
#undef ROMDEF_LAST
#define ROMDEF_ICFETCH 0xC243
#define ROMDEF_LAST 0xC243
0, 0xC2,0x3F, ICFETCH,

/* ICHARLIT */
#undef ROMDEF_LAST
#define ROMDEF_ICHARLIT 0xC247
#define ROMDEF_LAST 0xC247
0, 0xC2,0x43, ICHARLIT,

/* INITRP */
#undef ROMDEF_LAST
#define ROMDEF_INITRP 0xC24B
#define ROMDEF_LAST 0xC24B
0, 0xC2,0x47, INITRP,

/* INTERPRET */
#undef ROMDEF_LAST
#define ROMDEF_INTERPRET 0xC24F
#define ROMDEF_LAST 0xC24F
0, 0xC2,0x4B, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, source_len), PLUS, TWOSTORE, ZERO, 0xC5,0x5A, STORE, 0xC6,0x7C, 0xCA,0x3D, DUP, IZBRANCH, 46, 0xC1,0x60, QDUP, IZBRANCH, 16, ONEPLUS, 0xCB,0xBD, FETCH, ZEROEQUALS, OR, IZBRANCH, 4, EXECUTE, IBRANCH, 28, 0xC6,0xE6, IBRANCH, 24, 0xC2,0xE8, IZBRANCH, 10, 0xCB,0xBD, FETCH, IZBRANCH, 15, 0xC9,0xA1, IBRANCH, 11, 0xCC,0x45, 0xCB,0x9D, ICHARLIT, '?', EMIT, 0xC7,0x31, ABORT, IBRANCH, -51, TWODROP, EXIT,

/* ITYPE */
#undef ROMDEF_LAST
#define ROMDEF_ITYPE 0xC292
#define ROMDEF_LAST 0xC292
0, 0xC2,0x4F, DOCOLONROM,
OVER, PLUS, SWAP, TWODUP, NOTEQUALS, IZBRANCH, 7, DUP, ICFETCH, EMIT, ONEPLUS, IBRANCH, -9, TWODROP, EXIT,

/* IZBRANCH */
#undef ROMDEF_LAST
#define ROMDEF_IZBRANCH 0xC2A5
#define ROMDEF_LAST 0xC2A5
0, 0xC2,0x92, IZBRANCH,

/* LASTTASK */
#undef ROMDEF_LAST
#define ROMDEF_LASTTASK 0xC2A9
#define ROMDEF_LAST 0xC2A9
0, 0xC2,0xA5, DOCOLONROM,
0xC0,0x00, 0xC6,0xA4, 0xC6,0xA4, EXIT,

/* LATEST */
#undef ROMDEF_LAST
#define ROMDEF_LATEST 0xC2B4
#define ROMDEF_LAST 0xC2B4
0, 0xC2,0xA9, DOCOLONROM,
0xC0,0x00, 0xC6,0xA4, EXIT,

/* LFAFETCH */
#undef ROMDEF_LAST
#define ROMDEF_LFAFETCH 0xC2BD
#define ROMDEF_LAST 0xC2BD
0, 0xC2,0xB4, DOCOLONROM,
ONEPLUS, DUP, 0xC0,0x78, ICHARLIT, 8, LSHIFT, SWAP, ONEPLUS, 0xC0,0x78, OR, EXIT,

/* NAMELENGTH */
#undef ROMDEF_LAST
#define ROMDEF_NAMELENGTH 0xC2CE
#define ROMDEF_LAST 0xC2CE
0, 0xC2,0xBD, DOCOLONROM,
0xC0,0x78, ICHARLIT, 31, AND, EXIT,

/* NFALENGTH */
#undef ROMDEF_LAST
#define ROMDEF_NFALENGTH 0xC2D8
#define ROMDEF_LAST 0xC2D8
0, 0xC2,0xCE, DOCOLONROM,
DUP, 0xC1,0x0C, IZBRANCH, 5, DROP, ZERO, IBRANCH, 3, 0xC2,0xCE, EXIT,

/* NUMBERQ */
#undef ROMDEF_LAST
#define ROMDEF_NUMBERQ 0xC2E8
#define ROMDEF_LAST 0xC2E8
0, 0xC2,0xD8, DOCOLONROM,
OVER, CFETCH, DUP, ICHARLIT, '-', EQUALS, OVER, ICHARLIT, '+', EQUALS, OR, IZBRANCH, 18, ICHARLIT, '-', EQUALS, IZBRANCH, 4, TRUE, IBRANCH, 2, FALSE, TOR, ICHARLIT, 1, 0xC4,0x77, RFROM, IBRANCH, 3, DROP, ZERO, TOR, TWODUP, ZERO, ZERO, TWOSWAP, 0xC5,0x6A, IZBRANCH, 8, DROP, TWODROP, RFROM, DROP, ZERO, IBRANCH, 10, DROP, TWONIP, DROP, RFROM, ZEROLESS, IZBRANCH, 2, NEGATE, TRUE, EXIT,

/* REVEAL */
#undef ROMDEF_LAST
#define ROMDEF_REVEAL 0xC326
#define ROMDEF_LAST 0xC326
0, 0xC2,0xE8, DOCOLONROM,
0xC2,0xB4, FETCH, 0xC0,0x4B, DUP, CFETCH, ICHARLIT, 191, AND, SWAP, CSTORE, EXIT,

/* TIB */
#undef ROMDEF_LAST
#define ROMDEF_TIB 0xC337
#define ROMDEF_LAST 0xC337
0, 0xC3,0x26, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, tib), PLUS, EXIT,

/* TIBSIZE */
#undef ROMDEF_LAST
#define ROMDEF_TIBSIZE 0xC340
#define ROMDEF_LAST 0xC340
0, 0xC3,0x37, DOCOLONROM,
ICHARLIT, 80, EXIT,

/* TOKENQ */
#undef ROMDEF_LAST
#define ROMDEF_TOKENQ 0xC347
#define ROMDEF_LAST 0xC347
0, 0xC3,0x40, DOCOLONROM,
0xC3,0x6F, AND, ZEROEQUALS, EXIT,

/* UDSLASHMOD */
#undef ROMDEF_LAST
#define ROMDEF_UDSLASHMOD 0xC350
#define ROMDEF_LAST 0xC350
0, 0xC3,0x47, DOCOLONROM,
TOR, ZERO, RFETCH, UMSLASHMOD, RFROM, SWAP, TOR, UMSLASHMOD, RFROM, EXIT,

/* VM */
#undef ROMDEF_LAST
#define ROMDEF_VM 0xC35E
#define ROMDEF_LAST 0xC35E
0, 0xC3,0x50, VM,

/* XTCOMMA */
#undef ROMDEF_LAST
#define ROMDEF_XTCOMMA 0xC362
#define ROMDEF_LAST 0xC362
0, 0xC3,0x5E, DOCOLONROM,
DUP, ICHARLIT, 8, RSHIFT, 0xC6,0x8B, 0xC6,0x8B, EXIT,

/* XTFLAG */
#undef ROMDEF_LAST
#define ROMDEF_XTFLAG 0xC36F
#define ROMDEF_LAST 0xC36F
0, 0xC3,0x62, DOCOLONROM,
ICHARLIT, 128, ICHARLIT, 8, LSHIFT, EXIT,

/* XTMASK */
#undef ROMDEF_LAST
#define ROMDEF_XTMASK 0xC379
#define ROMDEF_LAST 0xC379
0, 0xC3,0x6F, DOCOLONROM,
ICHARLIT, 255, ICHARLIT, 63, ICHARLIT, 8, LSHIFT, OR, EXIT,

/* STORE */
0x80|'!',
#undef ROMDEF_LAST
#define ROMDEF_STORE 0xC387
#define ROMDEF_LAST 0xC387
1, 0xC3,0x79, STORE,

/* NUMSIGN */
0x80|'#',
#undef ROMDEF_LAST
#define ROMDEF_NUMSIGN 0xC38C
#define ROMDEF_LAST 0xC38C
1, 0xC3,0x87, DOCOLONROM,
BASE, FETCH, 0xC3,0x50, ROT, DUP, ICHARLIT, 9, GREATERTHAN, ICHARLIT, 7, AND, PLUS, ICHARLIT, 48, PLUS, 0xC9,0x16, EXIT,

/* NUMSIGNGRTR */
0x80|'>', '#',
#undef ROMDEF_LAST
#define ROMDEF_NUMSIGNGRTR 0xC3A5
#define ROMDEF_LAST 0xC3A5
2, 0xC3,0x8C, DOCOLONROM,
DROP, DROP, 0xC2,0x2B, FETCH, 0xC8,0xFE, 0xC2,0x34, PLUS, OVER, MINUS, EXIT,

/* NUMSIGNS */
0x80|'S', '#',
#undef ROMDEF_LAST
#define ROMDEF_NUMSIGNS 0xC3B8
#define ROMDEF_LAST 0xC3B8
2, 0xC3,0xA5, DOCOLONROM,
0xC3,0x8C, TWODUP, OR, IZBRANCH, 3, IBRANCH, -7, EXIT,

/* TICK */
0x80|'\'',
#undef ROMDEF_LAST
#define ROMDEF_TICK 0xC3C6
#define ROMDEF_LAST 0xC3C6
1, 0xC3,0xB8, DOCOLONROM,
0xC6,0x7C, 0xCA,0x3D, 0xC1,0x60, ZEROEQUALS, IZBRANCH, 11, 0xCC,0x45, 0xCB,0x9D, ICHARLIT, '?', EMIT, 0xC7,0x31, ABORT, EXIT,

/* PAREN */
0x80|'(',
#undef ROMDEF_LAST
#define ROMDEF_PAREN 0xC3DF
#define ROMDEF_LAST 0xC3DF
0x80|1, 0xC3,0xC6, DOCOLONROM,
ICHARLIT, ')', 0xCA,0x3D, TWODROP, EXIT,

/* STAR */
0x80|'*',
#undef ROMDEF_LAST
#define ROMDEF_STAR 0xC3EA
#define ROMDEF_LAST 0xC3EA
1, 0xC3,0xDF, DOCOLONROM,
UMSTAR, DROP, EXIT,

/* STARSLASH */
0x80|'/', '*',
#undef ROMDEF_LAST
#define ROMDEF_STARSLASH 0xC3F3
#define ROMDEF_LAST 0xC3F3
2, 0xC3,0xEA, DOCOLONROM,
0xC4,0x00, NIP, EXIT,

/* STARSLASHMOD */
0x80|'D', 'O', 'M', '/', '*',
#undef ROMDEF_LAST
#define ROMDEF_STARSLASHMOD 0xC400
#define ROMDEF_LAST 0xC400
5, 0xC3,0xF3, DOCOLONROM,
TOR, 0xC9,0xDD, RFROM, 0xCB,0x70, EXIT,

/* PLUS */
0x80|'+',
#undef ROMDEF_LAST
#define ROMDEF_PLUS 0xC40C
#define ROMDEF_LAST 0xC40C
1, 0xC4,0x00, PLUS,

/* PLUSSTORE */
0x80|'!', '+',
#undef ROMDEF_LAST
#define ROMDEF_PLUSSTORE 0xC412
#define ROMDEF_LAST 0xC412
2, 0xC4,0x0C, PLUSSTORE,

/* PLUSLOOP */
0x80|'P', 'O', 'O', 'L', '+',
#undef ROMDEF_LAST
#define ROMDEF_PLUSLOOP 0xC41B
#define ROMDEF_LAST 0xC41B
0x80|5, 0xC4,0x12, DOCOLONROM,
ICHARLIT, PPLUSLOOP, 0xC0,0xF4, EXIT,

/* COMMA */
0x80|',',
#undef ROMDEF_LAST
#define ROMDEF_COMMA 0xC425
#define ROMDEF_LAST 0xC425
1, 0xC4,0x1B, DOCOLONROM,
0xC8,0xFE, STORE, ICHARLIT, 1, 0xC6,0xB1, 0xC6,0x57, EXIT,

/* MINUS */
0x80|'-',
#undef ROMDEF_LAST
#define ROMDEF_MINUS 0xC434
#define ROMDEF_LAST 0xC434
1, 0xC4,0x25, MINUS,

/* DOT */
0x80|'.',
#undef ROMDEF_LAST
#define ROMDEF_DOT 0xC439
#define ROMDEF_LAST 0xC439
1, 0xC4,0x34, DOCOLONROM,
BASE, FETCH, ICHARLIT, 10, NOTEQUALS, IZBRANCH, 4, 0xCC,0x5A, EXIT, DUP, ABS, ZERO, 0xC5,0x27, 0xC3,0xB8, ROT, 0xCB,0x5E, 0xC3,0xA5, 0xCC,0x45, 0xCB,0x9D, EXIT,

/* SLASH */
0x80|'/',
#undef ROMDEF_LAST
#define ROMDEF_SLASH 0xC459
#define ROMDEF_LAST 0xC459
1, 0xC4,0x39, DOCOLONROM,
0xC4,0x65, NIP, EXIT,

/* SLASHMOD */
0x80|'D', 'O', 'M', '/',
#undef ROMDEF_LAST
#define ROMDEF_SLASHMOD 0xC465
#define ROMDEF_LAST 0xC465
4, 0xC4,0x59, DOCOLONROM,
TOR, 0xCB,0x4B, RFROM, 0xCB,0x70, EXIT,

/* SLASHSTRING */
0x80|'G', 'N', 'I', 'R', 'T', 'S', '/',
#undef ROMDEF_LAST
#define ROMDEF_SLASHSTRING 0xC477
#define ROMDEF_LAST 0xC477
7, 0xC4,0x65, DOCOLONROM,
ROT, OVER, PLUS, ROT, ROT, MINUS, EXIT,

/* ZERO */
0x80|'0',
#undef ROMDEF_LAST
#define ROMDEF_ZERO 0xC483
#define ROMDEF_LAST 0xC483
1, 0xC4,0x77, ZERO,

/* ZEROLESS */
0x80|'<', '0',
#undef ROMDEF_LAST
#define ROMDEF_ZEROLESS 0xC489
#define ROMDEF_LAST 0xC489
2, 0xC4,0x83, ZEROLESS,

/* ZERONOTEQUALS */
0x80|'>', '<', '0',
#undef ROMDEF_LAST
#define ROMDEF_ZERONOTEQUALS 0xC490
#define ROMDEF_LAST 0xC490
3, 0xC4,0x89, ZERONOTEQUALS,

/* ZEROEQUALS */
0x80|'=', '0',
#undef ROMDEF_LAST
#define ROMDEF_ZEROEQUALS 0xC496
#define ROMDEF_LAST 0xC496
2, 0xC4,0x90, ZEROEQUALS,

/* ONEPLUS */
0x80|'+', '1',
#undef ROMDEF_LAST
#define ROMDEF_ONEPLUS 0xC49C
#define ROMDEF_LAST 0xC49C
2, 0xC4,0x96, ONEPLUS,

/* ONEMINUS */
0x80|'-', '1',
#undef ROMDEF_LAST
#define ROMDEF_ONEMINUS 0xC4A2
#define ROMDEF_LAST 0xC4A2
2, 0xC4,0x9C, ONEMINUS,

/* TWOSTORE */
0x80|'!', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOSTORE 0xC4A8
#define ROMDEF_LAST 0xC4A8
2, 0xC4,0xA2, TWOSTORE,

/* TWOSTAR */
0x80|'*', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOSTAR 0xC4AE
#define ROMDEF_LAST 0xC4AE
2, 0xC4,0xA8, TWOSTAR,

/* TWOSLASH */
0x80|'/', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOSLASH 0xC4B4
#define ROMDEF_LAST 0xC4B4
2, 0xC4,0xAE, TWOSLASH,

/* TWOTOR */
0x80|'R', '>', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOTOR 0xC4BB
#define ROMDEF_LAST 0xC4BB
3, 0xC4,0xB4, TWOTOR,

/* TWOFETCH */
0x80|'@', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOFETCH 0xC4C1
#define ROMDEF_LAST 0xC4C1
2, 0xC4,0xBB, TWOFETCH,

/* TWODROP */
0x80|'P', 'O', 'R', 'D', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWODROP 0xC4CA
#define ROMDEF_LAST 0xC4CA
5, 0xC4,0xC1, TWODROP,

/* TWODUP */
0x80|'P', 'U', 'D', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWODUP 0xC4D2
#define ROMDEF_LAST 0xC4D2
4, 0xC4,0xCA, TWODUP,

/* TWONIP */
0x80|'P', 'I', 'N', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWONIP 0xC4DA
#define ROMDEF_LAST 0xC4DA
4, 0xC4,0xD2, TWONIP,

/* TWOOVER */
0x80|'R', 'E', 'V', 'O', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOOVER 0xC4E3
#define ROMDEF_LAST 0xC4E3
5, 0xC4,0xDA, TWOOVER,

/* TWORFROM */
0x80|'>', 'R', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWORFROM 0xC4EA
#define ROMDEF_LAST 0xC4EA
3, 0xC4,0xE3, TWORFROM,

/* TWORFETCH */
0x80|'@', 'R', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWORFETCH 0xC4F1
#define ROMDEF_LAST 0xC4F1
3, 0xC4,0xEA, TWORFETCH,

/* TWOSWAP */
0x80|'P', 'A', 'W', 'S', '2',
#undef ROMDEF_LAST
#define ROMDEF_TWOSWAP 0xC4FA
#define ROMDEF_LAST 0xC4FA
5, 0xC4,0xF1, TWOSWAP,

/* COLON */
0x80|':',
#undef ROMDEF_LAST
#define ROMDEF_COLON 0xC4FF
#define ROMDEF_LAST 0xC4FF
1, 0xC4,0xFA, DOCOLONROM,
0xC7,0x3F, 0xC2,0x1A, ZERO, ONEMINUS, 0xC6,0x57, ICHARLIT, DOCOLON, 0xC6,0x8B, 0xCD,0xC2, EXIT,

/* SEMICOLON */
0x80|';',
#undef ROMDEF_LAST
#define ROMDEF_SEMICOLON 0xC513
#define ROMDEF_LAST 0xC513
0x80|1, 0xC4,0xFF, DOCOLONROM,
ICHARLIT, EXIT, 0xC6,0xE6, 0xC3,0x26, 0xCD,0x89, EXIT,

/* LESSTHAN */
0x80|'<',
#undef ROMDEF_LAST
#define ROMDEF_LESSTHAN 0xC521
#define ROMDEF_LAST 0xC521
1, 0xC5,0x13, LESSTHAN,

/* LESSNUMSIGN */
0x80|'#', '<',
#undef ROMDEF_LAST
#define ROMDEF_LESSNUMSIGN 0xC527
#define ROMDEF_LAST 0xC527
2, 0xC5,0x21, DOCOLONROM,
0xC8,0xFE, 0xC2,0x34, PLUS, 0xC2,0x2B, STORE, EXIT,

/* NOTEQUALS */
0x80|'>', '<',
#undef ROMDEF_LAST
#define ROMDEF_NOTEQUALS 0xC536
#define ROMDEF_LAST 0xC536
2, 0xC5,0x27, NOTEQUALS,

/* EQUALS */
0x80|'=',
#undef ROMDEF_LAST
#define ROMDEF_EQUALS 0xC53B
#define ROMDEF_LAST 0xC53B
1, 0xC5,0x36, EQUALS,

/* GREATERTHAN */
0x80|'>',
#undef ROMDEF_LAST
#define ROMDEF_GREATERTHAN 0xC540
#define ROMDEF_LAST 0xC540
1, 0xC5,0x3B, GREATERTHAN,

/* TOBODY */
0x80|'Y', 'D', 'O', 'B', '>',
#undef ROMDEF_LAST
#define ROMDEF_TOBODY 0xC549
#define ROMDEF_LAST 0xC549
5, 0xC5,0x40, DOCOLONROM,
0xC3,0x79, AND, 0xC0,0x00, PLUS, ICHARLIT, 4, PLUS, EXIT,

/* TOIN */
0x80|'N', 'I', '>',
#undef ROMDEF_LAST
#define ROMDEF_TOIN 0xC55A
#define ROMDEF_LAST 0xC55A
3, 0xC5,0x49, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, to_in), PLUS, EXIT,

/* TONUMBER */
0x80|'R', 'E', 'B', 'M', 'U', 'N', '>',
#undef ROMDEF_LAST
#define ROMDEF_TONUMBER 0xC56A
#define ROMDEF_LAST 0xC56A
7, 0xC5,0x5A, DOCOLONROM,
DUP, IZBRANCH, 31, OVER, CFETCH, 0xC0,0xBF, ZEROEQUALS, IZBRANCH, 2, EXIT, TOR, TWOSWAP, BASE, FETCH, DUP, TOR, UMSTAR, DROP, SWAP, RFROM, UMSTAR, ROT, PLUS, RFROM, MPLUS, TWOSWAP, ICHARLIT, 1, 0xC4,0x77, IBRANCH, -32, EXIT,

/* TOR */
0x80|'R', '>',
#undef ROMDEF_LAST
#define ROMDEF_TOR 0xC592
#define ROMDEF_LAST 0xC592
2, 0xC5,0x6A, TOR,

/* TOUPPER */
0x80|'R', 'E', 'P', 'P', 'U', '>',
#undef ROMDEF_LAST
#define ROMDEF_TOUPPER 0xC59C
#define ROMDEF_LAST 0xC59C
6, 0xC5,0x92, DOCOLONROM,
DUP, ICHARLIT, 'a', ONEMINUS, GREATERTHAN, OVER, ICHARLIT, 'z', ONEPLUS, LESSTHAN, AND, IZBRANCH, 4, ICHARLIT, 32, MINUS, EXIT,

/* QDO */
0x80|'O', 'D', '?',
#undef ROMDEF_LAST
#define ROMDEF_QDO 0xC5B4
#define ROMDEF_LAST 0xC5B4
0x80|3, 0xC5,0x9C, DOCOLONROM,
ICHARLIT, PQDO, 0xC6,0xE6, 0xC8,0xFE, 0xC0,0x0A, STORE, ZERO, 0xC6,0x8B, 0xC8,0xFE, EXIT,

/* QDUP */
0x80|'P', 'U', 'D', '?',
#undef ROMDEF_LAST
#define ROMDEF_QDUP 0xC5CB
#define ROMDEF_LAST 0xC5CB
4, 0xC5,0xB4, QDUP,

/* FETCH */
0x80|'@',
#undef ROMDEF_LAST
#define ROMDEF_FETCH 0xC5D0
#define ROMDEF_LAST 0xC5D0
1, 0xC5,0xCB, FETCH,

/* ABORT */
0x80|'T', 'R', 'O', 'B', 'A',
#undef ROMDEF_LAST
#define ROMDEF_ABORT 0xC5D9
#define ROMDEF_LAST 0xC5D9
5, 0xC5,0xD0, ABORT,

/* ABS */
0x80|'S', 'B', 'A',
#undef ROMDEF_LAST
#define ROMDEF_ABS 0xC5E0
#define ROMDEF_LAST 0xC5E0
3, 0xC5,0xD9, ABS,

/* ACCEPT */
0x80|'T', 'P', 'E', 'C', 'C', 'A',
#undef ROMDEF_LAST
#define ROMDEF_ACCEPT 0xC5EA
#define ROMDEF_LAST 0xC5EA
6, 0xC5,0xE0, DOCOLONROM,
OVER, PLUS, OVER, 0xC9,0x65, DUP, ICHARLIT, 10, NOTEQUALS, IZBRANCH, 44, DUP, ICHARLIT, 8, EQUALS, OVER, ICHARLIT, 127, EQUALS, OR, IZBRANCH, 19, TWOOVER, DROP, NIP, OVER, NOTEQUALS, IZBRANCH, 10, ONEMINUS, ICHARLIT, 8, EMIT, 0xCB,0x9D, ICHARLIT, 8, EMIT, IBRANCH, 13, DUP, TWOOVER, NOTEQUALS, IZBRANCH, 7, EMIT, OVER, CSTORE, ONEPLUS, IBRANCH, 2, TWODROP, IBRANCH, -50, DROP, NIP, SWAP, MINUS, EXIT,

/* AGAIN */
0x80|'N', 'I', 'A', 'G', 'A',
#undef ROMDEF_LAST
#define ROMDEF_AGAIN 0xC62E
#define ROMDEF_LAST 0xC62E
0x80|5, 0xC5,0xEA, DOCOLONROM,
ICHARLIT, BRANCH, 0xC6,0xE6, 0xC8,0xFE, MINUS, 0xC6,0x8B, EXIT,

/* ALIGN */
0x80|'N', 'G', 'I', 'L', 'A',
#undef ROMDEF_LAST
#define ROMDEF_ALIGN 0xC641
#define ROMDEF_LAST 0xC641
5, 0xC6,0x2E, DOCOLONROM,
EXIT,

/* ALIGNED */
0x80|'D', 'E', 'N', 'G', 'I', 'L', 'A',
#undef ROMDEF_LAST
#define ROMDEF_ALIGNED 0xC64D
#define ROMDEF_LAST 0xC64D
7, 0xC6,0x41, DOCOLONROM,
EXIT,

/* ALLOT */
0x80|'T', 'O', 'L', 'L', 'A',
#undef ROMDEF_LAST
#define ROMDEF_ALLOT 0xC657
#define ROMDEF_LAST 0xC657
5, 0xC6,0x4D, DOCOLONROM,
0xC0,0xED, PLUSSTORE, EXIT,

/* AND */
0x80|'D', 'N', 'A',
#undef ROMDEF_LAST
#define ROMDEF_AND 0xC662
#define ROMDEF_LAST 0xC662
3, 0xC6,0x57, AND,

/* BASE */
0x80|'E', 'S', 'A', 'B',
#undef ROMDEF_LAST
#define ROMDEF_BASE 0xC66A
#define ROMDEF_LAST 0xC66A
4, 0xC6,0x62, BASE,

/* BEGIN */
0x80|'N', 'I', 'G', 'E', 'B',
#undef ROMDEF_LAST
#define ROMDEF_BEGIN 0xC673
#define ROMDEF_LAST 0xC673
0x80|5, 0xC6,0x6A, DOCOLONROM,
0xC8,0xFE, EXIT,

/* BL */
0x80|'L', 'B',
#undef ROMDEF_LAST
#define ROMDEF_BL 0xC67C
#define ROMDEF_LAST 0xC67C
2, 0xC6,0x73, DOCOLONROM,
ICHARLIT, ' ', EXIT,

/* CSTORE */
0x80|'!', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CSTORE 0xC685
#define ROMDEF_LAST 0xC685
2, 0xC6,0x7C, CSTORE,

/* CCOMMA */
0x80|',', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CCOMMA 0xC68B
#define ROMDEF_LAST 0xC68B
2, 0xC6,0x85, DOCOLONROM,
0xC8,0xFE, CSTORE, ICHARLIT, 1, 0xC6,0xD9, 0xC6,0x57, EXIT,

/* CFETCH */
0x80|'@', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CFETCH 0xC69B
#define ROMDEF_LAST 0xC69B
2, 0xC6,0x8B, CFETCH,

/* CELLPLUS */
0x80|'+', 'L', 'L', 'E', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CELLPLUS 0xC6A4
#define ROMDEF_LAST 0xC6A4
5, 0xC6,0x9B, DOCOLONROM,
ICHARLIT, kEnforthCellSize, PLUS, EXIT,

/* CELLS */
0x80|'S', 'L', 'L', 'E', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CELLS 0xC6B1
#define ROMDEF_LAST 0xC6B1
5, 0xC6,0xA4, DOCOLONROM,
ICHARLIT, kEnforthCellSize, 0xC3,0xEA, EXIT,

/* CHAR */
0x80|'R', 'A', 'H', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CHAR 0xC6BE
#define ROMDEF_LAST 0xC6BE
4, 0xC6,0xB1, DOCOLONROM,
0xC6,0x7C, 0xCA,0x3D, DROP, CFETCH, EXIT,

/* CHARPLUS */
0x80|'+', 'R', 'A', 'H', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CHARPLUS 0xC6CE
#define ROMDEF_LAST 0xC6CE
5, 0xC6,0xBE, DOCOLONROM,
ONEPLUS, EXIT,

/* CHARS */
0x80|'S', 'R', 'A', 'H', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CHARS 0xC6D9
#define ROMDEF_LAST 0xC6D9
5, 0xC6,0xCE, DOCOLONROM,
EXIT,

/* COMPILECOMMA */
0x80|',', 'E', 'L', 'I', 'P', 'M', 'O', 'C',
#undef ROMDEF_LAST
#define ROMDEF_COMPILECOMMA 0xC6E6
#define ROMDEF_LAST 0xC6E6
8, 0xC6,0xD9, DOCOLONROM,
DUP, 0xC3,0x47, IZBRANCH, 4, 0xC6,0x8B, EXIT, DUP, ONEPLUS, ONEPLUS, ONEPLUS, 0xC0,0x78, DUP, ICHARLIT, 112, LESSTHAN, IZBRANCH, 6, 0xC6,0x8B, DROP, IBRANCH, 4, DROP, 0xC3,0x62, EXIT,

/* CONSTANT */
0x80|'T', 'N', 'A', 'T', 'S', 'N', 'O', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CONSTANT 0xC70F
#define ROMDEF_LAST 0xC70F
8, 0xC6,0xE6, DOCOLONROM,
0xC7,0x3F, ZERO, ONEMINUS, 0xC6,0x57, ICHARLIT, DOCONSTANT, 0xC6,0x8B, 0xC4,0x25, EXIT,

/* COUNT */
0x80|'T', 'N', 'U', 'O', 'C',
#undef ROMDEF_LAST
#define ROMDEF_COUNT 0xC725
#define ROMDEF_LAST 0xC725
5, 0xC7,0x0F, DOCOLONROM,
DUP, CFETCH, SWAP, ONEPLUS, SWAP, EXIT,

/* CR */
0x80|'R', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CR 0xC731
#define ROMDEF_LAST 0xC731
2, 0xC7,0x25, DOCOLONROM,
ICHARLIT, 10, EMIT, EXIT,

/* CREATE */
0x80|'E', 'T', 'A', 'E', 'R', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CREATE 0xC73F
#define ROMDEF_LAST 0xC73F
6, 0xC7,0x31, DOCOLONROM,
0xC6,0x7C, 0xCA,0x3D, DUP, ZEROEQUALS, IZBRANCH, 2, ABORT, TUCK, OVER, PLUS, ONEMINUS, DUP, CFETCH, ICHARLIT, 128, OR, 0xC6,0x8B, TWODUP, NOTEQUALS, IZBRANCH, 8, ONEMINUS, DUP, CFETCH, 0xC6,0x8B, IBRANCH, -10, TWODROP, 0xC8,0xFE, 0xC0,0x56, SWAP, 0xC6,0x8B, 0xC2,0xB4, FETCH, 0xC3,0x62, 0xC2,0xB4, STORE, ICHARLIT, DOCREATE, 0xC6,0x8B, 0xC6,0x41, EXIT,

/* CNOTSIMILAR */
0x80|'}', '{', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CNOTSIMILAR 0xC77C
#define ROMDEF_LAST 0xC77C
3, 0xC7,0x3F, DOCOLONROM,
0xC7,0x86, INVERT, EXIT,

/* CSIMILAR */
0x80|'~', 'C',
#undef ROMDEF_LAST
#define ROMDEF_CSIMILAR 0xC786
#define ROMDEF_LAST 0xC786
2, 0xC7,0x7C, DOCOLONROM,
0xC5,0x9C, SWAP, 0xC5,0x9C, EQUALS, EXIT,

/* DABS */
0x80|'S', 'B', 'A', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DABS 0xC795
#define ROMDEF_LAST 0xC795
4, 0xC7,0x86, DOCOLONROM,
DUP, 0xC0,0x61, EXIT,

/* DECIMAL */
0x80|'L', 'A', 'M', 'I', 'C', 'E', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DECIMAL 0xC7A4
#define ROMDEF_LAST 0xC7A4
7, 0xC7,0x95, DOCOLONROM,
ICHARLIT, 10, BASE, STORE, EXIT,

/* DEPTH */
0x80|'H', 'T', 'P', 'E', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DEPTH 0xC7B2
#define ROMDEF_LAST 0xC7B2
5, 0xC7,0xA4, DEPTH,

/* DNEGATE */
0x80|'E', 'T', 'A', 'G', 'E', 'N', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DNEGATE 0xC7BD
#define ROMDEF_LAST 0xC7BD
7, 0xC7,0xB2, DOCOLONROM,
INVERT, SWAP, INVERT, SWAP, ICHARLIT, 1, MPLUS, EXIT,

/* DO */
0x80|'O', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DO 0xC7CB
#define ROMDEF_LAST 0xC7CB
0x80|2, 0xC7,0xBD, DOCOLONROM,
ZERO, 0xC0,0x0A, STORE, ICHARLIT, PDO, 0xC6,0xE6, 0xC8,0xFE, EXIT,

/* DROP */
0x80|'P', 'O', 'R', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DROP 0xC7DE
#define ROMDEF_LAST 0xC7DE
4, 0xC7,0xCB, DROP,

/* DUMP */
0x80|'P', 'M', 'U', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DUMP 0xC7E6
#define ROMDEF_LAST 0xC7E6
4, 0xC7,0xDE, DOCOLONROM,
BASE, FETCH, TOR, 0xC9,0x09, QDUP, IZBRANCH, 98, TWODUP, ICHARLIT, 16, MIN, TUCK, 0xC7,0x31, OVER, ZERO, 0xC5,0x27, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0xA5, 0xCC,0x45, ICHARLIT, 2, 0xCB,0xAB, DUP, ZERO, PDO, OVER, I, PLUS, CFETCH, ZERO, 0xC5,0x27, 0xC3,0x8C, 0xC3,0x8C, 0xC3,0xA5, 0xCC,0x45, 0xCB,0x9D, PILOOP, -18, ICHARLIT, 16, OVER, MINUS, ICHARLIT, 3, 0xC3,0xEA, 0xCB,0xAB, 0xCB,0x9D, ZERO, PDO, DUP, I, PLUS, CFETCH, DUP, ICHARLIT, 32, LESSTHAN, OVER, ICHARLIT, 127, GREATERTHAN, OR, IZBRANCH, 4, DROP, ICHARLIT, '.', EMIT, PILOOP, -20, DROP, 0xC4,0x77, IBRANCH, -99, RFROM, BASE, STORE, EXIT,

/* DUP */
0x80|'P', 'U', 'D',
#undef ROMDEF_LAST
#define ROMDEF_DUP 0xC85A
#define ROMDEF_LAST 0xC85A
3, 0xC7,0xE6, DUP,

/* ELSE */
0x80|'E', 'S', 'L', 'E',
#undef ROMDEF_LAST
#define ROMDEF_ELSE 0xC862
#define ROMDEF_LAST 0xC862
0x80|4, 0xC8,0x5A, DOCOLONROM,
ICHARLIT, BRANCH, 0xC6,0xE6, 0xC8,0xFE, ZERO, 0xC6,0x8B, SWAP, 0xCC,0x26, EXIT,

/* EMIT */
0x80|'T', 'I', 'M', 'E',
#undef ROMDEF_LAST
#define ROMDEF_EMIT 0xC877
#define ROMDEF_LAST 0xC877
4, 0xC8,0x62, EMIT,

/* EXECUTE */
0x80|'E', 'T', 'U', 'C', 'E', 'X', 'E',
#undef ROMDEF_LAST
#define ROMDEF_EXECUTE 0xC882
#define ROMDEF_LAST 0xC882
7, 0xC8,0x77, EXECUTE,

/* EXIT */
0x80|'T', 'I', 'X', 'E',
#undef ROMDEF_LAST
#define ROMDEF_EXIT 0xC88A
#define ROMDEF_LAST 0xC88A
4, 0xC8,0x82, EXIT,

/* FALSE */
0x80|'E', 'S', 'L', 'A', 'F',
#undef ROMDEF_LAST
#define ROMDEF_FALSE 0xC893
#define ROMDEF_LAST 0xC893
5, 0xC8,0x8A, FALSE,

/* FFIS */
0x80|'S', 'I', 'F', 'F',
#undef ROMDEF_LAST
#define ROMDEF_FFIS 0xC89B
#define ROMDEF_LAST 0xC89B
4, 0xC8,0x93, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, last_ffi), PLUS, FETCH, QDUP, IZBRANCH, 14, DUP, 0xC1,0x20, OVER, 0xC1,0x29, 0xC2,0x92, 0xCB,0x9D, IFETCH, IBRANCH, -15, EXIT,

/* FIND */
0x80|'D', 'N', 'I', 'F',
#undef ROMDEF_LAST
#define ROMDEF_FIND 0xC8B9
#define ROMDEF_LAST 0xC8B9
4, 0xC8,0x9B, DOCOLONROM,
0xC7,0x25, 0xC1,0x60, EXIT,

/* FMSLASHMOD */
0x80|'D', 'O', 'M', '/', 'M', 'F',
#undef ROMDEF_LAST
#define ROMDEF_FMSLASHMOD 0xC8C8
#define ROMDEF_LAST 0xC8C8
6, 0xC8,0xB9, DOCOLONROM,
DUP, TOR, TWODUP, XOR, SWAP, ABS, DUP, TOR, SWAP, TOR, TOR, 0xC7,0x95, RFROM, UMSLASHMOD, RFROM, ZEROLESS, IZBRANCH, 18, NEGATE, OVER, ZERONOTEQUALS, IZBRANCH, 9, ONEMINUS, SWAP, RFROM, SWAP, MINUS, SWAP, IBRANCH, 7, RFROM, DROP, IBRANCH, 3, RFROM, DROP, RFROM, ZEROLESS, IZBRANCH, 4, SWAP, NEGATE, SWAP, EXIT,

/* HERE */
0x80|'E', 'R', 'E', 'H',
#undef ROMDEF_LAST
#define ROMDEF_HERE 0xC8FE
#define ROMDEF_LAST 0xC8FE
4, 0xC8,0xC8, DOCOLONROM,
0xC0,0xED, FETCH, EXIT,

/* HEX */
0x80|'X', 'E', 'H',
#undef ROMDEF_LAST
#define ROMDEF_HEX 0xC909
#define ROMDEF_LAST 0xC909
3, 0xC8,0xFE, DOCOLONROM,
ICHARLIT, 16, BASE, STORE, EXIT,

/* HOLD */
0x80|'D', 'L', 'O', 'H',
#undef ROMDEF_LAST
#define ROMDEF_HOLD 0xC916
#define ROMDEF_LAST 0xC916
4, 0xC9,0x09, DOCOLONROM,
0xC2,0x2B, FETCH, ONEMINUS, DUP, 0xC2,0x2B, STORE, CSTORE, EXIT,

/* I */
0x80|'I',
#undef ROMDEF_LAST
#define ROMDEF_I 0xC925
#define ROMDEF_LAST 0xC925
1, 0xC9,0x16, I,

/* IF */
0x80|'F', 'I',
#undef ROMDEF_LAST
#define ROMDEF_IF 0xC92B
#define ROMDEF_LAST 0xC92B
0x80|2, 0xC9,0x25, DOCOLONROM,
ICHARLIT, ZBRANCH, 0xC6,0xE6, 0xC8,0xFE, ZERO, 0xC6,0x8B, EXIT,

/* IMMEDIATE */
0x80|'E', 'T', 'A', 'I', 'D', 'E', 'M', 'M', 'I',
#undef ROMDEF_LAST
#define ROMDEF_IMMEDIATE 0xC942
#define ROMDEF_LAST 0xC942
9, 0xC9,0x2B, DOCOLONROM,
0xC2,0xB4, FETCH, 0xC0,0x4B, DUP, CFETCH, ICHARLIT, 128, OR, SWAP, CSTORE, EXIT,

/* INVERT */
0x80|'T', 'R', 'E', 'V', 'N', 'I',
#undef ROMDEF_LAST
#define ROMDEF_INVERT 0xC959
#define ROMDEF_LAST 0xC959
6, 0xC9,0x42, INVERT,

/* J */
0x80|'J',
#undef ROMDEF_LAST
#define ROMDEF_J 0xC95E
#define ROMDEF_LAST 0xC95E
1, 0xC9,0x59, J,

/* KEY */
0x80|'Y', 'E', 'K',
#undef ROMDEF_LAST
#define ROMDEF_KEY 0xC965
#define ROMDEF_LAST 0xC965
3, 0xC9,0x5E, DOCOLONROM,
PAUSE, KEYQ, IZBRANCH, -3, PKEY, EXIT,

/* KEYQ */
0x80|'?', 'Y', 'E', 'K',
#undef ROMDEF_LAST
#define ROMDEF_KEYQ 0xC973
#define ROMDEF_LAST 0xC973
4, 0xC9,0x65, KEYQ,

/* LEAVE */
0x80|'E', 'V', 'A', 'E', 'L',
#undef ROMDEF_LAST
#define ROMDEF_LEAVE 0xC97C
#define ROMDEF_LAST 0xC97C
0x80|5, 0xC9,0x73, DOCOLONROM,
ICHARLIT, UNLOOP, 0xC6,0xE6, ICHARLIT, BRANCH, 0xC6,0xE6, 0xC8,0xFE, 0xC0,0x0A, FETCH, DUP, IZBRANCH, 5, 0xC8,0xFE, SWAP, MINUS, 0xC6,0x8B, 0xC0,0x0A, STORE, EXIT,

/* LITERAL */
0x80|'L', 'A', 'R', 'E', 'T', 'I', 'L',
#undef ROMDEF_LAST
#define ROMDEF_LITERAL 0xC9A1
#define ROMDEF_LAST 0xC9A1
0x80|7, 0xC9,0x7C, DOCOLONROM,
DUP, ICHARLIT, 255, INVERT, AND, ZEROEQUALS, IZBRANCH, 9, ICHARLIT, CHARLIT, 0xC6,0x8B, 0xC6,0x8B, IBRANCH, 7, ICHARLIT, LIT, 0xC6,0x8B, 0xC4,0x25, EXIT,

/* LOAD */
0x80|'D', 'A', 'O', 'L',
#undef ROMDEF_LAST
#define ROMDEF_LOAD 0xC9C0
#define ROMDEF_LAST 0xC9C0
4, 0xC9,0xA1, LOAD,

/* LOOP */
0x80|'P', 'O', 'O', 'L',
#undef ROMDEF_LAST
#define ROMDEF_LOOP 0xC9C8
#define ROMDEF_LAST 0xC9C8
0x80|4, 0xC9,0xC0, DOCOLONROM,
ICHARLIT, PLOOP, 0xC0,0xF4, EXIT,

/* LSHIFT */
0x80|'T', 'F', 'I', 'H', 'S', 'L',
#undef ROMDEF_LAST
#define ROMDEF_LSHIFT 0xC9D7
#define ROMDEF_LAST 0xC9D7
6, 0xC9,0xC8, LSHIFT,

/* MSTAR */
0x80|'*', 'M',
#undef ROMDEF_LAST
#define ROMDEF_MSTAR 0xC9DD
#define ROMDEF_LAST 0xC9DD
2, 0xC9,0xD7, DOCOLONROM,
TWODUP, XOR, ZEROLESS, TOR, ABS, SWAP, ABS, UMSTAR, RFROM, 0xC0,0x61, EXIT,

/* MPLUS */
0x80|'+', 'M',
#undef ROMDEF_LAST
#define ROMDEF_MPLUS 0xC9EF
#define ROMDEF_LAST 0xC9EF
2, 0xC9,0xDD, MPLUS,

/* MAX */
0x80|'X', 'A', 'M',
#undef ROMDEF_LAST
#define ROMDEF_MAX 0xC9F6
#define ROMDEF_LAST 0xC9F6
3, 0xC9,0xEF, MAX,

/* MIN */
0x80|'N', 'I', 'M',
#undef ROMDEF_LAST
#define ROMDEF_MIN 0xC9FD
#define ROMDEF_LAST 0xC9FD
3, 0xC9,0xF6, MIN,

/* MOD */
0x80|'D', 'O', 'M',
#undef ROMDEF_LAST
#define ROMDEF_MOD 0xCA04
#define ROMDEF_LAST 0xCA04
3, 0xC9,0xFD, DOCOLONROM,
0xC4,0x65, DROP, EXIT,

/* MOVE */
0x80|'E', 'V', 'O', 'M',
#undef ROMDEF_LAST
#define ROMDEF_MOVE 0xCA10
#define ROMDEF_LAST 0xCA10
4, 0xCA,0x04, MOVE,

/* NEGATE */
0x80|'E', 'T', 'A', 'G', 'E', 'N',
#undef ROMDEF_LAST
#define ROMDEF_NEGATE 0xCA1A
#define ROMDEF_LAST 0xCA1A
6, 0xCA,0x10, NEGATE,

/* NIP */
0x80|'P', 'I', 'N',
#undef ROMDEF_LAST
#define ROMDEF_NIP 0xCA21
#define ROMDEF_LAST 0xCA21
3, 0xCA,0x1A, NIP,

/* OR */
0x80|'R', 'O',
#undef ROMDEF_LAST
#define ROMDEF_OR 0xCA27
#define ROMDEF_LAST 0xCA27
2, 0xCA,0x21, OR,

/* OVER */
0x80|'R', 'E', 'V', 'O',
#undef ROMDEF_LAST
#define ROMDEF_OVER 0xCA2F
#define ROMDEF_LAST 0xCA2F
4, 0xCA,0x27, OVER,

/* PARSEWORD */
0x80|'D', 'R', 'O', 'W', '-', 'E', 'S', 'R', 'A', 'P',
#undef ROMDEF_LAST
#define ROMDEF_PARSEWORD 0xCA3D
#define ROMDEF_LAST 0xCA3D
10, 0xCA,0x2F, DOCOLONROM,
TOR, 0xCB,0x8E, 0xC5,0x5A, FETCH, 0xC4,0x77, RFETCH, TOR, OVER, CFETCH, RFETCH, EQUALS, OVER, AND, IZBRANCH, 7, ICHARLIT, 1, 0xC4,0x77, IBRANCH, -13, RFROM, DROP, OVER, SWAP, RFROM, TOR, DUP, ZEROEQUALS, IZBRANCH, 6, RFROM, TWODROP, FALSE, IBRANCH, 18, OVER, CFETCH, RFETCH, EQUALS, IZBRANCH, 6, RFROM, TWODROP, TRUE, IBRANCH, 7, ICHARLIT, 1, 0xC4,0x77, IBRANCH, -25, OVER, 0xCB,0x8E, DROP, MINUS, SWAP, IZBRANCH, 2, ONEPLUS, 0xC5,0x5A, STORE, OVER, MINUS, EXIT,

/* PAUSE */
0x80|'E', 'S', 'U', 'A', 'P',
#undef ROMDEF_LAST
#define ROMDEF_PAUSE 0xCA8D
#define ROMDEF_LAST 0xCA8D
5, 0xCA,0x3D, PAUSE,

/* POSTPONE */
0x80|'E', 'N', 'O', 'P', 'T', 'S', 'O', 'P',
#undef ROMDEF_LAST
#define ROMDEF_POSTPONE 0xCA99
#define ROMDEF_LAST 0xCA99
0x80|8, 0xCA,0x8D, DOCOLONROM,
0xC6,0x7C, 0xCA,0x3D, 0xC1,0x60, QDUP, ZEROEQUALS, IZBRANCH, 11, 0xCC,0x45, 0xCB,0x9D, ICHARLIT, '?', EMIT, 0xC7,0x31, ABORT, ZEROLESS, IZBRANCH, 19, ICHARLIT, LIT, 0xC6,0xE6, 0xC4,0x25, ICHARLIT, ((uint8_t)((ROMDEF_COMPILECOMMA >> 8) & 0xff)), ICHARLIT, 8, LSHIFT, ICHARLIT, ((uint8_t)((ROMDEF_COMPILECOMMA     ) & 0xff)), OR, 0xC3,0x62, IBRANCH, 3, 0xC6,0xE6, EXIT,

/* QUIT */
0x80|'T', 'I', 'U', 'Q',
#undef ROMDEF_LAST
#define ROMDEF_QUIT 0xCACD
#define ROMDEF_LAST 0xCACD
4, 0xCA,0x99, DOCOLONROM,
INITRP, ZERO, 0xCB,0xBD, STORE, 0xC3,0x37, DUP, 0xC3,0x40, 0xC5,0xEA, 0xCB,0x9D, 0xC2,0x4F, 0xC7,0x31, 0xCB,0xBD, FETCH, ZEROEQUALS, IZBRANCH, 8, PISQUOTE, 3, 'o', 'k', ' ', 0xC2,0x92, IBRANCH, -27,

/* RFROM */
0x80|'>', 'R',
#undef ROMDEF_LAST
#define ROMDEF_RFROM 0xCAF4
#define ROMDEF_LAST 0xCAF4
2, 0xCA,0xCD, RFROM,

/* RFETCH */
0x80|'@', 'R',
#undef ROMDEF_LAST
#define ROMDEF_RFETCH 0xCAFA
#define ROMDEF_LAST 0xCAFA
2, 0xCA,0xF4, RFETCH,

/* RECURSE */
0x80|'E', 'S', 'R', 'U', 'C', 'E', 'R',
#undef ROMDEF_LAST
#define ROMDEF_RECURSE 0xCB05
#define ROMDEF_LAST 0xCB05
0x80|7, 0xCA,0xFA, DOCOLONROM,
0xC2,0xB4, FETCH, 0xC3,0x62, EXIT,

/* REPEAT */
0x80|'T', 'A', 'E', 'P', 'E', 'R',
#undef ROMDEF_LAST
#define ROMDEF_REPEAT 0xCB15
#define ROMDEF_LAST 0xCB15
0x80|6, 0xCB,0x05, DOCOLONROM,
0xC6,0x2E, 0xCC,0x26, EXIT,

/* ROT */
0x80|'T', 'O', 'R',
#undef ROMDEF_LAST
#define ROMDEF_ROT 0xCB21
#define ROMDEF_LAST 0xCB21
3, 0xCB,0x15, ROT,

/* RSHIFT */
0x80|'T', 'F', 'I', 'H', 'S', 'R',
#undef ROMDEF_LAST
#define ROMDEF_RSHIFT 0xCB2B
#define ROMDEF_LAST 0xCB2B
6, 0xCB,0x21, RSHIFT,

/* SQUOTE */
0x80|'"', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SQUOTE 0xCB31
#define ROMDEF_LAST 0xCB31
0x80|2, 0xCB,0x2B, DOCOLONROM,
ICHARLIT, '"', 0xCA,0x3D, ICHARLIT, PSQUOTE, 0xC6,0xE6, DUP, 0xC6,0x8B, 0xC8,0xFE, OVER, 0xC6,0x57, SWAP, MOVE, EXIT,

/* STOD */
0x80|'D', '>', 'S',
#undef ROMDEF_LAST
#define ROMDEF_STOD 0xCB4B
#define ROMDEF_LAST 0xCB4B
3, 0xCB,0x31, DOCOLONROM,
DUP, ZEROLESS, EXIT,

/* SAVE */
0x80|'E', 'V', 'A', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SAVE 0xCB56
#define ROMDEF_LAST 0xCB56
4, 0xCB,0x4B, SAVE,

/* SIGN */
0x80|'N', 'G', 'I', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SIGN 0xCB5E
#define ROMDEF_LAST 0xCB5E
4, 0xCB,0x56, DOCOLONROM,
ZEROLESS, IZBRANCH, 5, ICHARLIT, '-', 0xC9,0x16, EXIT,

/* SMSLASHREM */
0x80|'M', 'E', 'R', '/', 'M', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SMSLASHREM 0xCB70
#define ROMDEF_LAST 0xCB70
6, 0xCB,0x5E, DOCOLONROM,
OVER, TOR, TWODUP, XOR, TOR, ABS, TOR, 0xC7,0x95, RFROM, UMSLASHMOD, RFROM, 0xC0,0x6B, SWAP, RFROM, 0xC0,0x6B, SWAP, EXIT,

/* SOURCE */
0x80|'E', 'C', 'R', 'U', 'O', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SOURCE 0xCB8E
#define ROMDEF_LAST 0xCB8E
6, 0xCB,0x70, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, source_len), PLUS, TWOFETCH, EXIT,

/* SPACE */
0x80|'E', 'C', 'A', 'P', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SPACE 0xCB9D
#define ROMDEF_LAST 0xCB9D
5, 0xCB,0x8E, DOCOLONROM,
0xC6,0x7C, EMIT, EXIT,

/* SPACES */
0x80|'S', 'E', 'C', 'A', 'P', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SPACES 0xCBAB
#define ROMDEF_LAST 0xCBAB
6, 0xCB,0x9D, DOCOLONROM,
QDUP, IZBRANCH, 6, 0xCB,0x9D, ONEMINUS, IBRANCH, -7, EXIT,

/* STATE */
0x80|'E', 'T', 'A', 'T', 'S',
#undef ROMDEF_LAST
#define ROMDEF_STATE 0xCBBD
#define ROMDEF_LAST 0xCBBD
5, 0xCB,0xAB, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, state), PLUS, EXIT,

/* SWAP */
0x80|'P', 'A', 'W', 'S',
#undef ROMDEF_LAST
#define ROMDEF_SWAP 0xCBCA
#define ROMDEF_LAST 0xCBCA
4, 0xCB,0xBD, SWAP,

/* TASK */
0x80|'K', 'S', 'A', 'T',
#undef ROMDEF_LAST
#define ROMDEF_TASK 0xCBD2
#define ROMDEF_LAST 0xCBD2
4, 0xCB,0xCA, DOCOLONROM,
0xC8,0xFE, 0xC2,0xA9, FETCH, 0xC4,0x25, DUP, 0xC2,0xA9, STORE, ICHARLIT, 8, 0xC6,0xB1, PLUS, ICHARLIT, 32, 0xC6,0xB1, PLUS, ICHARLIT, 20, 0xC6,0xB1, PLUS, 0xC4,0x25, ICHARLIT, 10, 0xC4,0x25, ICHARLIT, 5, 0xC6,0xB1, 0xC6,0x57, ICHARLIT, 32, 0xC6,0xB1, 0xC6,0x57, ICHARLIT, 20, 0xC6,0xB1, 0xC6,0x57, 0xC5,0x49, 0xC4,0x25, 0xC2,0xA9, FETCH, ICHARLIT, 8, 0xC6,0xB1, PLUS, ICHARLIT, 31, 0xC6,0xB1, PLUS, 0xC4,0x25, ZERO, 0xC4,0x25, ZERO, 0xC4,0x25, EXIT,

/* THEN */
0x80|'N', 'E', 'H', 'T',
#undef ROMDEF_LAST
#define ROMDEF_THEN 0xCC26
#define ROMDEF_LAST 0xCC26
0x80|4, 0xCB,0xD2, DOCOLONROM,
0xC8,0xFE, OVER, MINUS, SWAP, CSTORE, EXIT,

/* TRUE */
0x80|'E', 'U', 'R', 'T',
#undef ROMDEF_LAST
#define ROMDEF_TRUE 0xCC35
#define ROMDEF_LAST 0xCC35
4, 0xCC,0x26, TRUE,

/* TUCK */
0x80|'K', 'C', 'U', 'T',
#undef ROMDEF_LAST
#define ROMDEF_TUCK 0xCC3D
#define ROMDEF_LAST 0xCC3D
4, 0xCC,0x35, TUCK,

/* TYPE */
0x80|'E', 'P', 'Y', 'T',
#undef ROMDEF_LAST
#define ROMDEF_TYPE 0xCC45
#define ROMDEF_LAST 0xCC45
4, 0xCC,0x3D, DOCOLONROM,
OVER, PLUS, SWAP, TWODUP, NOTEQUALS, IZBRANCH, 7, DUP, CFETCH, EMIT, ONEPLUS, IBRANCH, -9, TWODROP, EXIT,

/* UDOT */
0x80|'.', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UDOT 0xCC5A
#define ROMDEF_LAST 0xCC5A
2, 0xCC,0x45, DOCOLONROM,
ZERO, 0xC5,0x27, 0xC3,0xB8, 0xC3,0xA5, 0xCC,0x45, 0xCB,0x9D, EXIT,

/* ULESSTHAN */
0x80|'<', 'U',
#undef ROMDEF_LAST
#define ROMDEF_ULESSTHAN 0xCC6C
#define ROMDEF_LAST 0xCC6C
2, 0xCC,0x5A, ULESSTHAN,

/* UGREATERTHAN */
0x80|'>', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UGREATERTHAN 0xCC72
#define ROMDEF_LAST 0xCC72
2, 0xCC,0x6C, UGREATERTHAN,

/* UDDOT */
0x80|'.', 'D', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UDDOT 0xCC79
#define ROMDEF_LAST 0xCC79
3, 0xCC,0x72, DOCOLONROM,
0xC5,0x27, 0xC3,0xB8, 0xC3,0xA5, 0xCC,0x45, 0xCB,0x9D, EXIT,

/* UMSTAR */
0x80|'*', 'M', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UMSTAR 0xCC8B
#define ROMDEF_LAST 0xCC8B
3, 0xCC,0x79, UMSTAR,

/* UMSLASHMOD */
0x80|'D', 'O', 'M', '/', 'M', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UMSLASHMOD 0xCC95
#define ROMDEF_LAST 0xCC95
6, 0xCC,0x8B, UMSLASHMOD,

/* UNLOOP */
0x80|'P', 'O', 'O', 'L', 'N', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UNLOOP 0xCC9F
#define ROMDEF_LAST 0xCC9F
6, 0xCC,0x95, UNLOOP,

/* UNTIL */
0x80|'L', 'I', 'T', 'N', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UNTIL 0xCCA8
#define ROMDEF_LAST 0xCCA8
0x80|5, 0xCC,0x9F, DOCOLONROM,
ICHARLIT, ZBRANCH, 0xC6,0xE6, 0xC8,0xFE, MINUS, 0xC6,0x8B, EXIT,

/* UNUSED */
0x80|'D', 'E', 'S', 'U', 'N', 'U',
#undef ROMDEF_LAST
#define ROMDEF_UNUSED 0xCCBC
#define ROMDEF_LAST 0xCCBC
6, 0xCC,0xA8, DOCOLONROM,
VM, ICHARLIT, offsetof(EnforthVM, dictionary), PLUS, FETCH, VM, ICHARLIT, offsetof(EnforthVM, dictionary_size), PLUS, FETCH, PLUS, 0xC8,0xFE, MINUS, EXIT,

/* USE */
0x80|':', 'E', 'S', 'U',
#undef ROMDEF_LAST
#define ROMDEF_USE 0xCCD3
#define ROMDEF_LAST 0xCCD3
4, 0xCC,0xBC, DOCOLONROM,
0xC6,0x7C, 0xCA,0x3D, DUP, ZEROEQUALS, IZBRANCH, 2, ABORT, TWODUP, 0xC1,0x3A, ZEROEQUALS, IZBRANCH, 11, 0xCC,0x45, 0xCB,0x9D, ICHARLIT, '?', EMIT, 0xC7,0x31, ABORT, 0xC8,0xFE, 0xC0,0x56, ROT, ICHARLIT, 32, OR, 0xC6,0x8B, 0xC2,0xB4, FETCH, 0xC3,0x62, 0xC2,0xB4, STORE, ICHARLIT, DOFFI0, OVER, 0xC1,0x17, PLUS, 0xC6,0x8B, 0xC6,0x41, 0xC4,0x25, DROP, EXIT,

/* VARIABLE */
0x80|'E', 'L', 'B', 'A', 'I', 'R', 'A', 'V',
#undef ROMDEF_LAST
#define ROMDEF_VARIABLE 0xCD18
#define ROMDEF_LAST 0xCD18
8, 0xCC,0xD3, DOCOLONROM,
0xC7,0x3F, ZERO, ONEMINUS, 0xC6,0x57, ICHARLIT, DOVARIABLE, 0xC6,0x8B, ZERO, 0xC4,0x25, EXIT,

/* WHILE */
0x80|'E', 'L', 'I', 'H', 'W',
#undef ROMDEF_LAST
#define ROMDEF_WHILE 0xCD2F
#define ROMDEF_LAST 0xCD2F
0x80|5, 0xCD,0x18, DOCOLONROM,
0xC9,0x2B, SWAP, EXIT,

/* WORDS */
0x80|'S', 'D', 'R', 'O', 'W',
#undef ROMDEF_LAST
#define ROMDEF_WORDS 0xCD3C
#define ROMDEF_LAST 0xCD3C
5, 0xCD,0x2F, DOCOLONROM,
0xC2,0xB4, FETCH, QDUP, IZBRANCH, 59, DUP, 0xC1,0x0C, IZBRANCH, 16, DUP, 0xC0,0x43, DUP, 0xC1,0x20, SWAP, 0xC1,0x29, 0xC2,0x92, 0xCB,0x9D, IBRANCH, 35, DUP, 0xC0,0x78, ICHARLIT, 64, AND, ZEROEQUALS, IZBRANCH, 28, DUP, DUP, 0xC2,0xCE, OVER, SWAP, MINUS, SWAP, TWODUP, NOTEQUALS, IZBRANCH, 11, ONEMINUS, DUP, 0xC0,0x78, ICHARLIT, 127, AND, EMIT, IBRANCH, -13, TWODROP, 0xCB,0x9D, 0xC2,0xBD, IBRANCH, -60, EXIT,

/* XOR */
0x80|'R', 'O', 'X',
#undef ROMDEF_LAST
#define ROMDEF_XOR 0xCD84
#define ROMDEF_LAST 0xCD84
3, 0xCD,0x3C, XOR,

/* LTBRACKET */
0x80|'[',
#undef ROMDEF_LAST
#define ROMDEF_LTBRACKET 0xCD89
#define ROMDEF_LAST 0xCD89
0x80|1, 0xCD,0x84, DOCOLONROM,
FALSE, 0xCB,0xBD, STORE, EXIT,

/* BRACKETTICK */
0x80|']', '\'', '[',
#undef ROMDEF_LAST
#define ROMDEF_BRACKETTICK 0xCD95
#define ROMDEF_LAST 0xCD95
0x80|3, 0xCD,0x89, DOCOLONROM,
0xC3,0xC6, ICHARLIT, LIT, 0xC6,0xE6, 0xC4,0x25, EXIT,

/* BRACKETCHAR */
0x80|']', 'R', 'A', 'H', 'C', '[',
#undef ROMDEF_LAST
#define ROMDEF_BRACKETCHAR 0xCDA8
#define ROMDEF_LAST 0xCDA8
0x80|6, 0xCD,0x95, DOCOLONROM,
0xC6,0xBE, ICHARLIT, CHARLIT, 0xC6,0xE6, 0xC6,0x8B, EXIT,

/* BACKSLASH */
0x80|'\\',
#undef ROMDEF_LAST
#define ROMDEF_BACKSLASH 0xCDB6
#define ROMDEF_LAST 0xCDB6
0x80|1, 0xCD,0xA8, DOCOLONROM,
0xCB,0x8E, NIP, 0xC5,0x5A, STORE, EXIT,

/* RTBRACKET */
0x80|']',
#undef ROMDEF_LAST
#define ROMDEF_RTBRACKET 0xCDC2
#define ROMDEF_LAST 0xCDC2
1, 0xCD,0xB6, DOCOLONROM,
TRUE, 0xCB,0xBD, STORE, EXIT,

